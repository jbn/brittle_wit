[
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/direct_messages.json", 
        "service": "direct_messages", 
        "family": "direct_messages", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {
            "user": 15
        }, 
        "desc": "Returns the 20 most recent direct messages sent to the authenticating user. Includes detailed information about the sender and recipient user. You can request up to 200 direct messages per call, and only the most recent 200 DMs will be available using this endpoint.", 
        "params": {
            "since_id": [
                "OPTIONAL", 
                "Returns results with an ID greater than (that is, more recent than) the specified ID. There are limits to the number of Tweets which can be accessed through the API. If the limit of Tweets has occured since the since_id, the since_id will be forced to the oldest ID available.\n\nExample Values : 12345"
            ], 
            "max_id": [
                "OPTIONAL", 
                "Returns results with an ID less than (that is, older than) or equal to the specified ID.\n\nExample Values : 54321"
            ], 
            "count": [
                "OPTIONAL", 
                "Specifies the number of direct messages to try and retrieve, up to a maximum of 200. The value of count is best thought of as a limit to the number of Tweets to return because suspended or deleted content is removed after the count has been applied.\n\nExample Values : 5"
            ], 
            "include_entities": [
                "OPTIONAL", 
                "The entities node will not be included when set to false .\n\nExample Values : false"
            ], 
            "skip_status": [
                "OPTIONAL", 
                "When set to either true , t or 1 statuses will not be included in the returned user objects."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/direct_messages"
    }, 
    {
        "method": "GET", 
        "url": "https://curator.twitter.com/broadcast/1/projects", 
        "service": "projects", 
        "family": "projects", 
        "resp_format": [
            "JSON", 
            "XML"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 900, 
            "user": 900
        }, 
        "desc": "This endpoint requires special permission to access and is only available for TV broadcast use cases. To request access please visit curator.twitter.com .", 
        "params": {
            "limit": [
                "OPTIONAL", 
                "The number of elements to return. Defaults to 500 if not specified."
            ], 
            "format": [
                "OPTIONAL", 
                "The output format request. This param can be either json or xml . It will default to json ."
            ], 
            "auth": [
                "REQUIRED", 
                "Auth token for user."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/projects"
    }, 
    {
        "method": "GET", 
        "url": "https://curator.twitter.com/broadcast/1/projects", 
        "service": "projects", 
        "family": "projects", 
        "resp_format": [
            "JSON", 
            "XML"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 900, 
            "user": 900
        }, 
        "desc": "This endpoint requires special permission to access and is only available for TV broadcast use cases. To request access please visit curator.twitter.com .", 
        "params": {
            "limit": [
                "OPTIONAL", 
                "The number of elements to return. Defaults to 500 if not specified."
            ], 
            "format": [
                "OPTIONAL", 
                "The output format request. This param can be either json or xml . It will default to json ."
            ], 
            "auth": [
                "REQUIRED", 
                "Auth token for user."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/projects"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/account/settings.json", 
        "service": "account/settings", 
        "family": "account", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {
            "user": 15
        }, 
        "desc": "Returns settings (including current trend, geo and sleep time information) for the authenticating user.", 
        "params": {}, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/account/settings"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/account/verify_credentials.json", 
        "service": "account/verify_credentials", 
        "family": "account", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {
            "user": 15
        }, 
        "desc": "Returns an HTTP 200 OK response code and a representation of the requesting user if authentication was successful; returns a 401 status code and an error message if not. Use this method to test if supplied user credentials are valid.", 
        "params": {
            "include_entities": [
                "OPTIONAL", 
                "The entities node will not be included when set to false .\n\nExample Values : false"
            ], 
            "skip_status": [
                "OPTIONAL", 
                "When set to either true , t or 1 statuses will not be included in the returned user object.\n\nExample Values : true"
            ], 
            "include_email": [
                "OPTIONAL", 
                "Use of this parameter requires whitelisting.\n\nWhen set to true email will be returned in the user objects as a string. If the user does not have an email address on their account, or if the email address is un-verified, null will be returned.\n\nExample Values : true"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/account/verify_credentials"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/application/rate_limit_status.json", 
        "service": "application/rate_limit_status", 
        "family": "application", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 180, 
            "user": 180
        }, 
        "desc": "Returns the current rate limits for methods belonging to the specified resource families.", 
        "params": {
            "resources": [
                "OPTIONAL", 
                "A comma-separated list of resource families you want to know the current rate limit disposition for. For best performance, only specify the resource families pertinent to your application.\n\nSee API Rate Limiting for more information.\n\nExample Values : statuses,friends,trends,help"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/application/rate_limit_status"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/blocks/ids.json", 
        "service": "blocks/ids", 
        "family": "blocks", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {
            "user": 15
        }, 
        "desc": "Returns an array of numeric user ids the authenticating user is blocking.", 
        "params": {
            "stringify_ids": [
                "OPTIONAL", 
                "Many programming environments will not consume our ids due to their size. Provide this option to have ids returned as strings instead. Read more about Twitter IDs .\n\nExample Values : true"
            ], 
            "cursor": [
                "OPTIONAL", 
                "Causes the list of IDs to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of -1 will be assumed, which is the first \u201cpage.\u201d The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. See Using cursors to navigate collections for more information.\n\nExample Values : 12893764510938"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/blocks/ids"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/blocks/list.json", 
        "service": "blocks/list", 
        "family": "blocks", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {
            "user": 15
        }, 
        "desc": "Returns a collection of user objects that the authenticating user is blocking.", 
        "params": {
            "include_entities": [
                "OPTIONAL", 
                "The entities node will not be included when set to false .\n\nExample Values : false"
            ], 
            "skip_status": [
                "OPTIONAL", 
                "When set to either true , t or 1 statuses will not be included in the returned user objects."
            ], 
            "cursor": [
                "OPTIONAL", 
                "Causes the list of blocked users to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of -1 will be assumed, which is the first \u201cpage.\u201d The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. See Using cursors to navigate collections for more information.\n\nExample Values : 12893764510938"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/blocks/list"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/collections/entries.json", 
        "service": "collections/entries", 
        "family": "collections", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {
            "user": 1000
        }, 
        "desc": "Retrieve the identified Collection, presented as a list of the Tweets curated within.", 
        "params": {
            "id": [
                "REQUIRED", 
                "The identifier of the Collection to return results for.\n\nExample Value : custom-539487832448843776"
            ], 
            "count": [
                "OPTIONAL", 
                "Specifies the maximum number of results to include in the response. Specify a count between 1 and 200. A next_cursor value will be provided in the response if additional results are available.\n\nExample Value : 100"
            ], 
            "max_position": [
                "OPTIONAL", 
                "Returns results with a position value less than or equal to the specified position.\n\nExample Value : 54321"
            ], 
            "min_position": [
                "OPTIONAL", 
                "Returns results with a position greater than the specified position.\n\nExample Value : 12345"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/collections/entries"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/collections/list.json", 
        "service": "collections/list", 
        "family": "collections", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {
            "user": 1000
        }, 
        "desc": "Find Collections created by a specific user or containing a specific curated Tweet.", 
        "params": {
            "user_id": [
                "REQUIRED", 
                "The ID of the user for whom to return results for.\n\nExample Value : 20"
            ], 
            "screen_name": [
                "REQUIRED", 
                "The screen name of the user for whom to return results for.\n\nExample Value : twitterdev"
            ], 
            "tweet_id": [
                "OPTIONAL", 
                "The identifier of the Tweet for which to return results for.\n\nExample Value : 514533751213551616"
            ], 
            "count": [
                "OPTIONAL", 
                "Specifies the maximum number of results to include in the response. Specify a count between 1 and 200. A next_cursor value will be provided in the response if additional results are available.\n\nExample Value : 100"
            ], 
            "cursor": [
                "OPTIONAL", 
                "A string identifying the segment of the current result set to retrieve. Values for this parameter are yielded in the cursors node attached to response objects. Usage of the count parameter affects cursoring.\n\nExample Value : BXb2synCEAE"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/collections/list"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/collections/show.json", 
        "service": "collections/show", 
        "family": "collections", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {
            "user": 1000
        }, 
        "desc": "Retrieve information associated with a specific Collection.", 
        "params": {
            "id": [
                "REQUIRED", 
                "The identifier of the Collection to return results for.\n\nExample Value : custom-388061495298244609"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/collections/show"
    }, 
    {
        "method": "GET", 
        "url": "https://curator.twitter.com/broadcast/1/collections/:id/content", 
        "service": "collections/:id/content", 
        "family": "collections", 
        "resp_format": [
            "JSON", 
            "XML"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 900, 
            "user": 900
        }, 
        "desc": "This endpoint requires special permission to access and is only available for TV broadcast use cases. To request access please visit curator.twitter.com .", 
        "params": {
            "id": [
                "REQUIRED", 
                "The id of the collection."
            ], 
            "auth": [
                "REQUIRED", 
                "Auth token for user."
            ], 
            "limit": [
                "OPTIONAL", 
                "The number of elements to return. Defaults to 25 if not specified."
            ], 
            "page": [
                "OPTIONAL", 
                "Used for pagination. Use the next_page or prev_page value obtained from a previous request. Use next_page to paginate through older results and prev_page to paginate through newer results."
            ], 
            "format": [
                "OPTIONAL", 
                "The output format request. This param can be either json or xml . It will default to json ."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/collections/id/content"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/direct_messages/sent.json", 
        "service": "direct_messages/sent", 
        "family": "direct_messages", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {
            "user": 15
        }, 
        "desc": "Returns the 20 most recent direct messages sent by the authenticating user. Includes detailed information about the sender and recipient user. You can request up to 200 direct messages per call, up to a maximum of 800 outgoing DMs.", 
        "params": {
            "since_id": [
                "OPTIONAL", 
                "Returns results with an ID greater than (that is, more recent than) the specified ID. There are limits to the number of Tweets which can be accessed through the API. If the limit of Tweets has occured since the since_id, the since_id will be forced to the oldest ID available.\n\nExample Values : 12345"
            ], 
            "max_id": [
                "OPTIONAL", 
                "Returns results with an ID less than (that is, older than) or equal to the specified ID.\n\nExample Values : 54321"
            ], 
            "count": [
                "OPTIONAL", 
                "Specifies the number of records to retrieve. Must be less than or equal to 200.\n\nExample Values : 5"
            ], 
            "page": [
                "OPTIONAL", 
                "Specifies the page of results to retrieve.\n\nExample Values : 3"
            ], 
            "include_entities": [
                "OPTIONAL", 
                "The entities node will not be included when set to false .\n\nExample Values : false"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/direct_messages/sent"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/direct_messages/show.json", 
        "service": "direct_messages/show", 
        "family": "direct_messages", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {
            "user": 15
        }, 
        "desc": "Returns a single direct message, specified by an id parameter. Like the /1.1/direct_messages.format request, this method will include the user objects of the sender and recipient.", 
        "params": {
            "id": [
                "REQUIRED", 
                "The ID of the direct message.\n\nExample Values : 587424932"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/direct_messages/show"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/favorites/list.json", 
        "service": "favorites/list", 
        "family": "favorites", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 15, 
            "user": 15
        }, 
        "desc": "Returns the 20 most recent Tweets liked by the authenticating or specified user.", 
        "params": {
            "user_id": [
                "OPTIONAL", 
                "The ID of the user for whom to return results for.\n\nExample Values : 12345"
            ], 
            "screen_name": [
                "OPTIONAL", 
                "The screen name of the user for whom to return results for.\n\nExample Values : noradio"
            ], 
            "count": [
                "OPTIONAL", 
                "Specifies the number of records to retrieve. Must be less than or equal to 200; defaults to 20. The value of count is best thought of as a limit to the number of tweets to return because suspended or deleted content is removed after the count has been applied.\n\nExample Values : 5"
            ], 
            "since_id": [
                "OPTIONAL", 
                "Returns results with an ID greater than (that is, more recent than) the specified ID. There are limits to the number of Tweets which can be accessed through the API. If the limit of Tweets has occured since the since_id, the since_id will be forced to the oldest ID available.\n\nExample Values : 12345"
            ], 
            "max_id": [
                "OPTIONAL", 
                "Returns results with an ID less than (that is, older than) or equal to the specified ID.\n\nExample Values : 54321"
            ], 
            "include_entities": [
                "OPTIONAL", 
                "The entities node will be omitted when set to false .\n\nExample Values : false"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/favorites/list"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/followers/ids.json", 
        "service": "followers/ids", 
        "family": "followers", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 15, 
            "user": 15
        }, 
        "desc": "Returns a cursored collection of user IDs for every user following the specified user.", 
        "params": {
            "user_id": [
                "OPTIONAL", 
                "The ID of the user for whom to return results for.\n\nExample Values : 12345"
            ], 
            "screen_name": [
                "OPTIONAL", 
                "The screen name of the user for whom to return results for.\n\nExample Values : noradio"
            ], 
            "cursor": [
                "OPTIONAL", 
                "Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of -1 will be assumed, which is the first \u201cpage.\u201d The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. See Using cursors to navigate collections for more information.\n\nExample Values : 12893764510938"
            ], 
            "stringify_ids": [
                "OPTIONAL", 
                "Many programming environments will not consume our Tweet ids due to their size. Provide this option to have ids returned as strings instead. More about [node:194].\n\nExample Values : true"
            ], 
            "count": [
                "OPTIONAL", 
                "Specifies the number of IDs attempt retrieval of, up to a maximum of 5,000 per distinct request. The value of count is best thought of as a limit to the number of results to return. When using the count parameter with this method, it is wise to use a consistent count value across all requests to the same user\u2019s collection. Usage of this parameter is encouraged in environments where all 5,000 IDs constitutes too large of a response.\n\nExample Values : 2048"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/followers/ids"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/followers/list.json", 
        "service": "followers/list", 
        "family": "followers", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 30, 
            "user": 15
        }, 
        "desc": "Returns a cursored collection of user objects for users following the specified user.", 
        "params": {
            "user_id": [
                "OPTIONAL", 
                "The ID of the user for whom to return results for.\n\nExample Values : 12345"
            ], 
            "screen_name": [
                "OPTIONAL", 
                "The screen name of the user for whom to return results for.\n\nExample Values : twitterdev"
            ], 
            "cursor": [
                "OPTIONAL", 
                "Causes the results to be broken into pages. If no cursor is provided, a value of -1 will be assumed, which is the first \u201cpage.\u201d The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. See Using cursors to navigate collections for more information.\n\nExample Values : 12893764510938"
            ], 
            "count": [
                "OPTIONAL", 
                "The number of users to return per page, up to a maximum of 200. Defaults to 20.\n\nExample Values : 42"
            ], 
            "skip_status": [
                "OPTIONAL", 
                "When set to either true , t or 1 , statuses will not be included in the returned user objects. If set to any other value, statuses will be included.\n\nExample Values : false"
            ], 
            "include_user_entities": [
                "OPTIONAL", 
                "The user object entities node will not be included when set to false .\n\nExample Values : false"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/followers/list"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/friends/ids.json", 
        "service": "friends/ids", 
        "family": "friends", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 15, 
            "user": 15
        }, 
        "desc": "Returns a cursored collection of user IDs for every user the specified user is following (otherwise known as their friends).", 
        "params": {
            "user_id": [
                "OPTIONAL", 
                "The ID of the user for whom to return results for.\n\nExample Values : 12345"
            ], 
            "screen_name": [
                "OPTIONAL", 
                "The screen name of the user for whom to return results for.\n\nExample Values : noradio"
            ], 
            "cursor": [
                "OPTIONAL", 
                "Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of -1 will be assumed, which is the first \u201cpage.\u201d The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. See Using cursors to navigate collections for more information.\n\nExample Values : 12893764510938"
            ], 
            "stringify_ids": [
                "OPTIONAL", 
                "Many programming environments will not consume our Tweet ids due to their size. Provide this option to have ids returned as strings instead. More about Twitter IDs .\n\nExample Values : true"
            ], 
            "count": [
                "OPTIONAL", 
                "Specifies the number of IDs attempt retrieval of, up to a maximum of 5,000 per distinct request. The value of count is best thought of as a limit to the number of results to return. When using the count parameter with this method, it is wise to use a consistent count value across all requests to the same user\u2019s collection. Usage of this parameter is encouraged in environments where all 5,000 IDs constitutes too large of a response.\n\nExample Values : 2048"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/friends/ids"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/friends/list.json", 
        "service": "friends/list", 
        "family": "friends", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 30, 
            "user": 15
        }, 
        "desc": "Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their friends).", 
        "params": {
            "user_id": [
                "OPTIONAL", 
                "The ID of the user for whom to return results for.\n\nExample Values : 12345"
            ], 
            "screen_name": [
                "OPTIONAL", 
                "The screen name of the user for whom to return results for.\n\nExample Values : noradio"
            ], 
            "cursor": [
                "OPTIONAL", 
                "Causes the results to be broken into pages. If no cursor is provided, a value of -1 will be assumed, which is the first \u201cpage.\u201d The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. See [node:10362, title=\u201dUsing cursors to navigate collections\u201d] for more information.\n\nExample Values : 12893764510938"
            ], 
            "count": [
                "OPTIONAL", 
                "The number of users to return per page, up to a maximum of 200. Defaults to 20.\n\nExample Values : 42"
            ], 
            "skip_status": [
                "OPTIONAL", 
                "When set to either true , t or 1 statuses will not be included in the returned user objects.\n\nExample Values : false"
            ], 
            "include_user_entities": [
                "OPTIONAL", 
                "The user object entities node will be disincluded when set to false .\n\nExample Values : false"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/friends/list"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/friendships/incoming.json", 
        "service": "friendships/incoming", 
        "family": "friendships", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {
            "user": 15
        }, 
        "desc": "Returns a collection of numeric IDs for every user who has a pending request to follow the authenticating user.", 
        "params": {
            "cursor": [
                "OPTIONAL", 
                "Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of -1 will be assumed, which is the first \u201cpage.\u201d The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. See [node:10362, title=\u201dUsing cursors to navigate collections\u201d] for more information.\n\nExample Values : 12893764510938"
            ], 
            "stringify_ids": [
                "OPTIONAL", 
                "Many programming environments will not consume our Tweet ids due to their size. Provide this option to have ids returned as strings instead. More about [node:194].\n\nExample Values : true"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/friendships/incoming"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/friendships/lookup.json", 
        "service": "friendships/lookup", 
        "family": "friendships", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {
            "user": 15
        }, 
        "desc": "Returns the relationships of the authenticating user to the comma-separated list of up to 100 screen_names or user_ids provided. Values for connections can be: following , following_requested , followed_by , none , blocking , muting .", 
        "params": {
            "screen_name": [
                "OPTIONAL", 
                "A comma separated list of screen names, up to 100 are allowed in a single request.\n\nExample Values : twitterapi,twitter"
            ], 
            "user_id": [
                "OPTIONAL", 
                "A comma separated list of user IDs, up to 100 are allowed in a single request.\n\nExample Values : 783214,6253282"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/friendships/lookup"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/friendships/outgoing.format", 
        "service": "friendships/outgoing", 
        "family": "friendships", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {
            "user": 15
        }, 
        "desc": "Returns a collection of numeric IDs for every protected user for whom the authenticating user has a pending follow request.", 
        "params": {
            "cursor": [
                "OPTIONAL", 
                "Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of -1 will be assumed, which is the first \u201cpage.\u201d The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. See [node:10362, title=\u201dUsing cursors to navigate collections\u201d] for more information.\n\nExample Values : 12893764510938"
            ], 
            "stringify_ids": [
                "OPTIONAL", 
                "Many programming environments will not consume our Tweet ids due to their size. Provide this option to have ids returned as strings instead. More about [node:194].\n\nExample Values : true"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/friendships/outgoing"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/friendships/show.json", 
        "service": "friendships/show", 
        "family": "friendships", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 15, 
            "user": 180
        }, 
        "desc": "Returns detailed information about the relationship between two arbitrary users.", 
        "params": {
            "source_id": [
                "OPTIONAL", 
                "The user_id of the subject user.\n\nExample Values : 3191321"
            ], 
            "source_screen_name": [
                "OPTIONAL", 
                "The screen_name of the subject user.\n\nExample Values : raffi"
            ], 
            "target_id": [
                "OPTIONAL", 
                "The user_id of the target user.\n\nExample Values : 20"
            ], 
            "target_screen_name": [
                "OPTIONAL", 
                "The screen_name of the target user.\n\nExample Values : noradio"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/friendships/show"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/friendships/no_retweets/ids.json", 
        "service": "friendships/no_retweets/ids", 
        "family": "friendships", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {
            "user": 15
        }, 
        "desc": "Returns a collection of user_ids that the currently authenticated user does not want to receive retweets from.", 
        "params": {
            "stringify_ids": [
                "OPTIONAL", 
                "Many programming environments will not consume our ids due to their size. Provide this option to have ids returned as strings instead. Read more about [node:194]. This parameter is especially important to use in Javascript environments.\n\nExample Values : true"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/friendships/no_retweets/ids"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/geo/reverse_geocode.json", 
        "service": "geo/reverse_geocode", 
        "family": "geo", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {
            "user": 15
        }, 
        "desc": "Given a latitude and a longitude, searches for up to 20 places that can be used as a place_id when updating a status.", 
        "params": {
            "lat": [
                "REQUIRED", 
                "The latitude to search around. This parameter will be ignored unless it is inside the range -90.0 to +90.0 (North is positive) inclusive. It will also be ignored if there isn\u2019t a corresponding long parameter.\n\nExample Values : 37.7821120598956"
            ], 
            "long": [
                "REQUIRED", 
                "The longitude to search around. The valid ranges for longitude is -180.0 to +180.0 (East is positive) inclusive. This parameter will be ignored if outside that range, if it is not a number, if geo_enabled is disabled, or if there not a corresponding lat parameter.\n\nExample Values : -122.400612831116"
            ], 
            "accuracy": [
                "OPTIONAL", 
                "A hint on the \u201cregion\u201d in which to search. If a number, then this is a radius in meters, but it can also take a string that is suffixed with ft to specify feet. If this is not passed in, then it is assumed to be 0m . If coming from a device, in practice, this value is whatever accuracy the device has measuring its location (whether it be coming from a GPS, WiFi triangulation, etc.).\n\nExample Values : 5ft"
            ], 
            "granularity": [
                "OPTIONAL", 
                "This is the minimal granularity of place types to return and must be one of: poi , neighborhood , city , admin or country . If no granularity is provided for the request neighborhood is assumed. Setting this to city , for example, will find places which have a type of city , admin or country .\n\nExample Values : city"
            ], 
            "max_results": [
                "OPTIONAL", 
                "A hint as to the number of results to return. This does not guarantee that the number of results returned will equal max_results, but instead informs how many \u201cnearby\u201d results to return. Ideally, only pass in the number of places you intend to display to the user here.\n\nExample Values : 3"
            ], 
            "callback": [
                "OPTIONAL", 
                "If supplied, the response will use the JSONP format with a callback of the given name."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/geo/reverse_geocode"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/geo/search.json", 
        "service": "geo/search", 
        "family": "geo", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {
            "user": 15
        }, 
        "desc": "Search for places that can be attached to a statuses/update. Given a latitude and a longitude pair, an IP address, or a name, this request will return a list of all the valid places that can be used as the place_id when updating a status.", 
        "params": {
            "lat": [
                "OPTIONAL", 
                "The latitude to search around. This parameter will be ignored unless it is inside the range -90.0 to +90.0 (North is positive) inclusive. It will also be ignored if there isn\u2019t a corresponding long parameter.\n\nExample Values : 37.7821120598956"
            ], 
            "long": [
                "OPTIONAL", 
                "The longitude to search around. The valid ranges for longitude is -180.0 to +180.0 (East is positive) inclusive. This parameter will be ignored if outside that range, if it is not a number, if geo_enabled is disabled, or if there not a corresponding lat parameter.\n\nExample Values : -122.400612831116"
            ], 
            "query": [
                "OPTIONAL", 
                "Free-form text to match against while executing a geo-based query, best suited for finding nearby locations by name. Remember to URL encode the query.\n\nExample Values : Twitter%20HQ"
            ], 
            "ip": [
                "OPTIONAL", 
                "An IP address. Used when attempting to fix geolocation based off of the user\u2019s IP address.\n\nExample Values : 74.125.19.104"
            ], 
            "granularity": [
                "OPTIONAL", 
                "This is the minimal granularity of place types to return and must be one of: poi , neighborhood , city , admin or country . If no granularity is provided for the request neighborhood is assumed. Setting this to city , for example, will find places which have a type of city , admin or country .\n\nExample Values : city"
            ], 
            "accuracy": [
                "OPTIONAL", 
                "A hint on the \u201cregion\u201d in which to search. If a number, then this is a radius in meters, but it can also take a string that is suffixed with ft to specify feet. If this is not passed in, then it is assumed to be 0m . If coming from a device, in practice, this value is whatever accuracy the device has measuring its location (whether it be coming from a GPS, WiFi triangulation, etc.).\n\nExample Values : 5ft"
            ], 
            "max_results": [
                "OPTIONAL", 
                "A hint as to the number of results to return. This does not guarantee that the number of results returned will equal max_results, but instead informs how many \u201cnearby\u201d results to return. Ideally, only pass in the number of places you intend to display to the user here.\n\nExample Values : 3"
            ], 
            "contained_within": [
                "OPTIONAL", 
                "This is the place_id which you would like to restrict the search results to. Setting this value means only places within the given place_id will be found. Specify a place_id. For example, to scope all results to places within \u201cSan Francisco, CA USA\u201d, you would specify a place_id of \u201c5a110d312052166f\u201d\n\nExample Values : 247f43d441defc03"
            ], 
            "attribute:street_address": [
                "OPTIONAL", 
                "This parameter searches for places which have this given street address. There are other well-known, and application specific attributes available. Custom attributes are also permitted. Learn more about [node:208, title=\u201dPlace Attributes\u201d].\n\nExample Values : 795%20Folsom%20St"
            ], 
            "callback": [
                "OPTIONAL", 
                "If supplied, the response will use the JSONP format with a callback of the given name."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/geo/search"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/geo/id/:place_id.json", 
        "service": "geo/id/:place_id", 
        "family": "geo", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {
            "user": 15
        }, 
        "desc": "Returns all the information about a known place .", 
        "params": {
            "place_id": [
                "REQUIRED", 
                "A place in the world. These IDs can be retrieved from geo/reverse_geocode.\n\nExample Values : df51dec6f4ee2b2c"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/geo/id/:place_id"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/help/configuration.json", 
        "service": "help/configuration", 
        "family": "help", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 15, 
            "user": 15
        }, 
        "desc": "Returns the current configuration used by Twitter including twitter.com slugs which are not usernames, maximum photo resolutions, and t.co shortened URL length.", 
        "params": {}, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/help/configuration"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/help/privacy.json", 
        "service": "help/privacy", 
        "family": "help", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 15, 
            "user": 15
        }, 
        "desc": "Returns Twitters Privacy Policy .", 
        "params": {}, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/help/privacy"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/help/tos.json", 
        "service": "help/tos", 
        "family": "help", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 15, 
            "user": 15
        }, 
        "desc": "Returns the Twitter Terms of Service . Note: these are not the same as the Developer Policy .", 
        "params": {}, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/help/tos"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/lists/list.json", 
        "service": "lists/list", 
        "family": "lists", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 15, 
            "user": 15
        }, 
        "desc": "Returns all lists the authenticating or specified user subscribes to, including their own. The user is specified using the user_id or screen_name parameters. If no user is given, the authenticating user is used.", 
        "params": {
            "user_id": [
                "OPTIONAL", 
                "The ID of the user for whom to return results for. Helpful for disambiguating when a valid user ID is also a valid screen name.\n\nExample Values : 12345\n\nNote: : Specifies the ID of the user to get lists from. Helpful for disambiguating when a valid user ID is also a valid screen name."
            ], 
            "screen_name": [
                "OPTIONAL", 
                "The screen name of the user for whom to return results for. Helpful for disambiguating when a valid screen name is also a user ID.\n\nExample Values : noradio"
            ], 
            "reverse": [
                "OPTIONAL", 
                "Set this to true if you would like owned lists to be returned first.  See description above for information on how this parameter works.\n\nExample Values : true"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/lists/list"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/lists/members.json", 
        "service": "lists/members", 
        "family": "lists", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 15, 
            "user": 180
        }, 
        "desc": "Returns the members of the specified list. Private list members will only be shown if the authenticated user owns the specified list.", 
        "params": {
            "list_id": [
                "REQUIRED", 
                "The numerical id of the list."
            ], 
            "slug": [
                "REQUIRED", 
                "You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you\u2019ll also have to specify the list owner using the owner_id or owner_screen_name parameters."
            ], 
            "owner_screen_name": [
                "OPTIONAL", 
                "The screen name of the user who owns the list being requested by a slug ."
            ], 
            "owner_id": [
                "OPTIONAL", 
                "The user ID of the user who owns the list being requested by a slug ."
            ], 
            "count": [
                "OPTIONAL", 
                "Specifies the number of results to return per page (see cursor below). The default is 20, with a maximum of 5,000."
            ], 
            "cursor": [
                "OPTIONAL", 
                "Causes the collection of list members to be broken into \u201cpages\u201d of consistent sizes (specified by the count parameter). If no cursor is provided, a value of -1 will be assumed, which is the first \u201cpage.\u201d The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. See Using cursors to navigate collections for more information.\n\nExample Values : 12893764510938"
            ], 
            "include_entities": [
                "OPTIONAL", 
                "The entities node will be disincluded when set to false .\n\nExample Values : false"
            ], 
            "skip_status": [
                "OPTIONAL", 
                "When set to either true , t or 1 statuses will not be included in the returned user objects."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/lists/members"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/lists/memberships.json", 
        "service": "lists/memberships", 
        "family": "lists", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 15, 
            "user": 15
        }, 
        "desc": "Returns the lists the specified user has been added to. If user_id or screen_name are not provided the memberships for the authenticating user are returned.", 
        "params": {
            "user_id": [
                "OPTIONAL", 
                "The ID of the user for whom to return results for. Helpful for disambiguating when a valid user ID is also a valid screen name."
            ], 
            "screen_name": [
                "OPTIONAL", 
                "The screen name of the user for whom to return results for. Helpful for disambiguating when a valid screen name is also a user ID."
            ], 
            "count": [
                "OPTIONAL", 
                "The amount of results to return per page. Defaults to 20. No more than 1000 results will ever be returned in a single page."
            ], 
            "cursor": [
                "OPTIONAL", 
                "Breaks the results into pages. Provide a value of -1 to begin paging. Provide values as returned in the response body\u2019s next_cursor and previous_cursor attributes to page back and forth in the list. It is recommended to always use cursors when the method supports them.  See [node:10362] for more information."
            ], 
            "filter_to_owned_lists": [
                "OPTIONAL", 
                "When set to true , t or 1 , will return just lists the authenticating user owns, and the user represented by user_id or screen_name is a member of."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/lists/memberships"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/lists/ownerships.json", 
        "service": "lists/ownerships", 
        "family": "lists", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 15, 
            "user": 15
        }, 
        "desc": "Returns the lists owned by the specified Twitter user. Private lists will only be shown if the authenticated user is also the owner of the lists.", 
        "params": {
            "user_id": [
                "OPTIONAL", 
                "The ID of the user for whom to return results for."
            ], 
            "screen_name": [
                "OPTIONAL", 
                "The screen name of the user for whom to return results for."
            ], 
            "count": [
                "OPTIONAL", 
                "The amount of results to return per page. Defaults to 20. No more than 1000 results will ever be returned in a single page."
            ], 
            "cursor": [
                "OPTIONAL", 
                "Breaks the results into pages. Provide a value of -1 to begin paging. Provide values as returned in the response body\u2019s next_cursor and previous_cursor attributes to page back and forth in the list. It is recommended to always use cursors when the method supports them.  See [node:10362] for more information."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/lists/ownerships"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/lists/show.json", 
        "service": "lists/show", 
        "family": "lists", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 15, 
            "user": 15
        }, 
        "desc": "Returns the specified list. Private lists will only be shown if the authenticated user owns the specified list.", 
        "params": {
            "list_id": [
                "REQUIRED", 
                "The numerical id of the list."
            ], 
            "slug": [
                "REQUIRED", 
                "You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you\u2019ll also have to specify the list owner using the owner_id or owner_screen_name parameters."
            ], 
            "owner_screen_name": [
                "OPTIONAL", 
                "The screen name of the user who owns the list being requested by a slug ."
            ], 
            "owner_id": [
                "OPTIONAL", 
                "The user ID of the user who owns the list being requested by a slug ."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/lists/show"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/lists/statuses.json", 
        "service": "lists/statuses", 
        "family": "lists", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 180, 
            "user": 180
        }, 
        "desc": "Returns a timeline of tweets authored by members of the specified list. Retweets are included by default. Use the include_rts=false parameter to omit retweets.", 
        "params": {
            "list_id": [
                "REQUIRED", 
                "The numerical id of the list."
            ], 
            "slug": [
                "REQUIRED", 
                "You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you\u2019ll also have to specify the list owner using the owner_id or owner_screen_name parameters."
            ], 
            "owner_screen_name": [
                "OPTIONAL", 
                "The screen name of the user who owns the list being requested by a slug ."
            ], 
            "owner_id": [
                "OPTIONAL", 
                "The user ID of the user who owns the list being requested by a slug ."
            ], 
            "since_id": [
                "OPTIONAL", 
                "Returns results with an ID greater than (that is, more recent than) the specified ID. There are limits to the number of Tweets which can be accessed through the API. If the limit of Tweets has occured since the since_id, the since_id will be forced to the oldest ID available."
            ], 
            "max_id": [
                "OPTIONAL", 
                "Returns results with an ID less than (that is, older than) or equal to the specified ID."
            ], 
            "count": [
                "OPTIONAL", 
                "Specifies the number of results to retrieve per \u201cpage.\u201d"
            ], 
            "include_entities": [
                "OPTIONAL", 
                "Entities are ON by default in API 1.1, each tweet includes a node called \u201centities\u201d. This node offers a variety of metadata about the tweet in a discreet structure, including: user_mentions, urls, and hashtags. You can omit entities from the result by using include_entities=false"
            ], 
            "include_rts": [
                "OPTIONAL", 
                "When set to either true , t or 1 , the list timeline will contain native retweets (if they exist) in addition to the standard stream of tweets. The output format of retweeted tweets is identical to the representation you see in home_timeline."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/lists/statuses"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/lists/subscribers.json", 
        "service": "lists/subscribers", 
        "family": "lists", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 15, 
            "user": 180
        }, 
        "desc": "Returns the subscribers of the specified list. Private list subscribers will only be shown if the authenticated user owns the specified list.", 
        "params": {
            "list_id": [
                "REQUIRED", 
                "The numerical id of the list."
            ], 
            "slug": [
                "REQUIRED", 
                "You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you\u2019ll also have to specify the list owner using the owner_id or owner_screen_name parameters."
            ], 
            "owner_screen_name": [
                "OPTIONAL", 
                "The screen name of the user who owns the list being requested by a slug ."
            ], 
            "owner_id": [
                "OPTIONAL", 
                "The user ID of the user who owns the list being requested by a slug ."
            ], 
            "count": [
                "OPTIONAL", 
                "Specifies the number of results to return per page (see cursor below). The default is 20, with a maximum of 5,000."
            ], 
            "cursor": [
                "OPTIONAL", 
                "Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned in the response body\u2019s next_cursor and previous_cursor attributes to page back and forth in the list. See Using cursors to navigate collections for more information."
            ], 
            "include_entities": [
                "OPTIONAL", 
                "When set to either true , t or 1 , each tweet will include a node called \u201centities\u201d. This node offers a variety of metadata about the tweet in a discreet structure, including: user_mentions, urls, and hashtags. While entities are opt-in on timelines at present, they will be made a default component of output in the future. See Tweet Entities for more details."
            ], 
            "skip_status": [
                "OPTIONAL", 
                "When set to either true , t or 1 statuses will not be included in the returned user objects."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/lists/subscribers"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/lists/subscribers.json", 
        "service": "lists/subscribers", 
        "family": "lists", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 15, 
            "user": 180
        }, 
        "desc": "Returns the subscribers of the specified list. Private list subscribers will only be shown if the authenticated user owns the specified list.", 
        "params": {
            "list_id": [
                "REQUIRED", 
                "The numerical id of the list."
            ], 
            "slug": [
                "REQUIRED", 
                "You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you\u2019ll also have to specify the list owner using the owner_id or owner_screen_name parameters."
            ], 
            "owner_screen_name": [
                "OPTIONAL", 
                "The screen name of the user who owns the list being requested by a slug ."
            ], 
            "owner_id": [
                "OPTIONAL", 
                "The user ID of the user who owns the list being requested by a slug ."
            ], 
            "count": [
                "OPTIONAL", 
                "Specifies the number of results to return per page (see cursor below). The default is 20, with a maximum of 5,000."
            ], 
            "cursor": [
                "OPTIONAL", 
                "Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned in the response body\u2019s next_cursor and previous_cursor attributes to page back and forth in the list. See Using cursors to navigate collections for more information."
            ], 
            "include_entities": [
                "OPTIONAL", 
                "When set to either true , t or 1 , each tweet will include a node called \u201centities\u201d. This node offers a variety of metadata about the tweet in a discreet structure, including: user_mentions, urls, and hashtags. While entities are opt-in on timelines at present, they will be made a default component of output in the future. See Tweet Entities for more details."
            ], 
            "skip_status": [
                "OPTIONAL", 
                "When set to either true , t or 1 statuses will not be included in the returned user objects."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/lists/subscribers"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/lists/subscriptions.json", 
        "service": "lists/subscriptions", 
        "family": "lists", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 15, 
            "user": 15
        }, 
        "desc": "Obtain a collection of the lists the specified user is subscribed to, 20 lists per page by default.  Does not include the users own lists.", 
        "params": {
            "user_id": [
                "OPTIONAL", 
                "The ID of the user for whom to return results for. Helpful for disambiguating when a valid user ID is also a valid screen name."
            ], 
            "screen_name": [
                "OPTIONAL", 
                "The screen name of the user for whom to return results for. Helpful for disambiguating when a valid screen name is also a user ID."
            ], 
            "count": [
                "OPTIONAL", 
                "The amount of results to return per page. Defaults to 20. No more than 1000 results will ever be returned in a single page."
            ], 
            "cursor": [
                "OPTIONAL", 
                "Breaks the results into pages. Provide a value of -1 to begin paging. Provide values as returned in the response body\u2019s next_cursor and previous_cursor attributes to page back and forth in the list. It is recommended to always use cursors when the method supports them.  See [node:10362] for more information."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/lists/subscriptions"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/lists/members/show.json", 
        "service": "lists/members/show", 
        "family": "lists", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 15, 
            "user": 15
        }, 
        "desc": "Check if the specified user is a member of the specified list.", 
        "params": {
            "list_id": [
                "REQUIRED", 
                "The numerical id of the list."
            ], 
            "slug": [
                "REQUIRED", 
                "You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you\u2019ll also have to specify the list owner using the owner_id or owner_screen_name parameters."
            ], 
            "user_id": [
                "REQUIRED", 
                "The ID of the user for whom to return results for. Helpful for disambiguating when a valid user ID is also a valid screen name."
            ], 
            "screen_name": [
                "REQUIRED", 
                "The screen name of the user for whom to return results for. Helpful for disambiguating when a valid screen name is also a user ID."
            ], 
            "owner_screen_name": [
                "OPTIONAL", 
                "The screen name of the user who owns the list being requested by a slug ."
            ], 
            "owner_id": [
                "OPTIONAL", 
                "The user ID of the user who owns the list being requested by a slug ."
            ], 
            "include_entities": [
                "OPTIONAL", 
                "When set to either true , t or 1 , each tweet will include a node called \u201centities\u201d. This node offers a variety of metadata about the tweet in a discreet structure, including: user_mentions, urls, and hashtags. While entities are opt-in on timelines at present, they will be made a default component of output in the future. See Tweet Entities for more details."
            ], 
            "skip_status": [
                "OPTIONAL", 
                "When set to either true , t or 1 statuses will not be included in the returned user objects."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/lists/members/show"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/lists/subscribers/show.json", 
        "service": "lists/subscribers/show", 
        "family": "lists", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 15, 
            "user": 15
        }, 
        "desc": "Check if the specified user is a subscriber of the specified list. Returns the user if they are subscriber.", 
        "params": {
            "owner_screen_name": [
                "OPTIONAL", 
                "The screen name of the user who owns the list being requested by a slug ."
            ], 
            "owner_id": [
                "OPTIONAL", 
                "The user ID of the user who owns the list being requested by a slug ."
            ], 
            "list_id": [
                "REQUIRED", 
                "The numerical id of the list."
            ], 
            "slug": [
                "REQUIRED", 
                "You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you\u2019ll also have to specify the list owner using the owner_id or owner_screen_name parameters."
            ], 
            "user_id": [
                "REQUIRED", 
                "The ID of the user for whom to return results for. Helpful for disambiguating when a valid user ID is also a valid screen name."
            ], 
            "screen_name": [
                "REQUIRED", 
                "The screen name of the user for whom to return results for. Helpful for disambiguating when a valid screen name is also a user ID."
            ], 
            "include_entities": [
                "OPTIONAL", 
                "When set to either true , t or 1 , each tweet will include a node called \u201centities\u201d. This node offers a variety of metadata about the tweet in a discreet structure, including: user_mentions, urls, and hashtags. While entities are opt-in on timelines at present, they will be made a default component of output in the future. See Tweet Entities for more details."
            ], 
            "skip_status": [
                "OPTIONAL", 
                "When set to either true , t or 1 statuses will not be included in the returned user objects."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/lists/subscribers/show"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/mutes/users/ids.json", 
        "service": "mutes/users/ids", 
        "family": "mutes", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {
            "user": 15
        }, 
        "desc": "Returns an array of numeric user ids the authenticating user has muted.", 
        "params": {
            "cursor": [
                "OPTIONAL", 
                "Causes the list of IDs to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out. If no cursor is provided, a value of -1 will be assumed, which is the first \u201cpage.\u201d The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. See [node:10362, title=\u201dUsing cursors to navigate collections\u201d] for more information.\n\nExample Values : 2"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/mutes/users/ids"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/mutes/users/list.json", 
        "service": "mutes/users/list", 
        "family": "mutes", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {
            "user": 15
        }, 
        "desc": "Returns an array of user objects the authenticating user has muted.", 
        "params": {
            "cursor": [
                "OPTIONAL", 
                "Causes the list of IDs to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of -1 will be assumed, which is the first \u201cpage.\u201d The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. See [node:10362, title=\u201dUsing cursors to navigate collections\u201d] for more information.\n\nExample Values : 2"
            ], 
            "include_entities": [
                "OPTIONAL", 
                "The entities node will not be included when set to false .\n\nExample Values : false"
            ], 
            "skip_status": [
                "OPTIONAL", 
                "When set to either true , t or 1 statuses will not be included in the returned user objects.\n\nExample Values : true"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/mutes/users/list"
    }, 
    {
        "method": "GET", 
        "url": "https://curator.twitter.com/broadcast/1/projects/:id", 
        "service": "projects/:id", 
        "family": "projects", 
        "resp_format": [
            "JSON", 
            "XML"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 900, 
            "user": 900
        }, 
        "desc": "This endpoint requires special permission to access and is only available for TV broadcast use cases. To request access please visit curator.twitter.com .", 
        "params": {
            "id": [
                "REQUIRED", 
                "The id of the project to look up."
            ], 
            "format": [
                "OPTIONAL", 
                "The output format request. This param can be either json or xml . It will default to json ."
            ], 
            "auth": [
                "REQUIRED", 
                "Auth token for user."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/projects/id"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/saved_searches/list.json", 
        "service": "saved_searches/list", 
        "family": "saved_searches", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {
            "user": 15
        }, 
        "desc": "Returns the authenticated users saved search queries.", 
        "params": {}, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/saved_searches/list"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/saved_searches/show/:id.json", 
        "service": "saved_searches/show/:id", 
        "family": "saved_searches", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {
            "user": 15
        }, 
        "desc": "Retrieve the information for the saved search represented by the given id. The authenticating user must be the owner of saved search ID being requested.", 
        "params": {
            "id": [
                "REQUIRED", 
                "The ID of the saved search.\n\nExample Values : 313006"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/saved_searches/show/:id"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/search/tweets.json", 
        "service": "search/tweets", 
        "family": "search", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 450, 
            "user": 180
        }, 
        "desc": "Returns a collection of relevant Tweets matching a specified query.", 
        "params": {
            "q": [
                "REQUIRED", 
                "A UTF-8, URL-encoded search query of 500 characters maximum, including operators.  Queries may additionally be limited by complexity.\n\nExample Values : @noradio"
            ], 
            "geocode": [
                "OPTIONAL", 
                "Returns tweets by users located within a given radius of the given latitude/longitude. The location is preferentially taking from the Geotagging API, but will fall back to their Twitter profile. The parameter value is specified by \u201c latitude,longitude,radius \u201d, where radius units must be specified as either \u201c mi \u201d (miles) or \u201c km \u201d (kilometers). Note that you cannot use the near operator via the API to geocode arbitrary locations; however you can use this geocode parameter to search near geocodes directly. A maximum of 1,000 distinct \u201csub-regions\u201d will be considered when using the radius modifier.\n\nExample Values : 37.781157,-122.398720,1mi"
            ], 
            "lang": [
                "OPTIONAL", 
                "Restricts tweets to the given language, given by an ISO 639-1 code. Language detection is best-effort.\n\nExample Values : eu"
            ], 
            "locale": [
                "OPTIONAL", 
                "Specify the language of the query you are sending (only ja is currently effective). This is intended for language-specific consumers and the default should work in the majority of cases.\n\nExample Values : ja"
            ], 
            "result_type": [
                "OPTIONAL", 
                "Optional. Specifies what type of search results you would prefer to receive. The current default is \u201cmixed.\u201d Valid values include: * mixed : Include both popular and real time results in the response. * recent : return only the most recent results in the response * popular : return only the most popular results in the response.\n\nExample Values : mixed , recent , popular"
            ], 
            "count": [
                "OPTIONAL", 
                "The number of tweets to return per page, up to a maximum of 100. Defaults to 15. This was formerly the \u201crpp\u201d parameter in the old Search API.\n\nExample Values : 100"
            ], 
            "until": [
                "OPTIONAL", 
                "Returns tweets created before the given date. Date should be formatted as YYYY-MM-DD. Keep in mind that the search index has a 7-day limit.  In other words, no tweets will be found for a date older than one week.\n\nExample Values : 2015-07-19"
            ], 
            "since_id": [
                "OPTIONAL", 
                "Returns results with an ID greater than (that is, more recent than) the specified ID. There are limits to the number of Tweets which can be accessed through the API. If the limit of Tweets has occured since the since_id, the since_id will be forced to the oldest ID available.\n\nExample Values : 12345"
            ], 
            "max_id": [
                "OPTIONAL", 
                "Returns results with an ID less than (that is, older than) or equal to the specified ID.\n\nExample Values : 54321"
            ], 
            "include_entities": [
                "OPTIONAL", 
                "The entities node will be disincluded when set to false .\n\nExample Values : false"
            ], 
            "callback": [
                "OPTIONAL", 
                "If supplied, the response will use the JSONP format with a callback of the given name. The usefulness of this parameter is somewhat diminished by the requirement of authentication for requests to this endpoint.\n\nExample Values : processTweets"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/search/tweets"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/statuses/home_timeline.json", 
        "service": "statuses/home_timeline", 
        "family": "statuses", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {
            "user": 15
        }, 
        "desc": "Returns a collection of the most recent Tweets and retweets posted by the authenticating user and the users they follow. The home timeline is central to how most users interact with the Twitter service.", 
        "params": {
            "count": [
                "OPTIONAL", 
                "Specifies the number of records to retrieve. Must be less than or equal to 200. Defaults to 20. The value of count is best thought of as a limit to the number of tweets to return because suspended or deleted content is removed after the count has been applied.\n\nExample Values : 5"
            ], 
            "since_id": [
                "OPTIONAL", 
                "Returns results with an ID greater than (that is, more recent than) the specified ID. There are limits to the number of Tweets which can be accessed through the API. If the limit of Tweets has occured since the since_id, the since_id will be forced to the oldest ID available.\n\nExample Values : 12345"
            ], 
            "max_id": [
                "OPTIONAL", 
                "Returns results with an ID less than (that is, older than) or equal to the specified ID.\n\nExample Values : 54321"
            ], 
            "trim_user": [
                "OPTIONAL", 
                "When set to either true , t or 1 , each tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.\n\nExample Values : true"
            ], 
            "exclude_replies": [
                "OPTIONAL", 
                "This parameter will prevent replies from appearing in the returned timeline. Using exclude_replies with the count parameter will mean you will receive up-to count tweets \u2014 this is because the count parameter retrieves that many tweets before filtering out retweets and replies.\n\nExample Values : true"
            ], 
            "contributor_details": [
                "OPTIONAL", 
                "This parameter enhances the contributors element of the status response to include the screen_name of the contributor. By default only the user_id of the contributor is included.\n\nExample Values : true"
            ], 
            "include_entities": [
                "OPTIONAL", 
                "The entities node will be disincluded when set to false .\n\nExample Values : false"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/statuses/home_timeline"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/statuses/lookup.json", 
        "service": "statuses/lookup", 
        "family": "statuses", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 60, 
            "user": 180
        }, 
        "desc": "Returns fully-hydrated tweet objects for up to 100 tweets per request, as specified by comma-separated values passed to the id parameter.", 
        "params": {
            "id": [
                "REQUIRED", 
                "A comma separated list of tweet IDs, up to 100 are allowed in a single request.\n\nExample Values : 20 , 432656548536401920"
            ], 
            "include_entities": [
                "OPTIONAL", 
                "The entities node that may appear within embedded statuses will be disincluded when set to false .\n\nExample Values : false"
            ], 
            "trim_user": [
                "OPTIONAL", 
                "When set to either true , t or 1 , each tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.\n\nExample Values : true"
            ], 
            "map": [
                "OPTIONAL", 
                "When using the map parameter, tweets that do not exist or cannot be viewed by the current user will still have their key represented but with an explicitly null value paired with it\n\nExample Values : true"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/statuses/lookup"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/statuses/mentions_timeline.json", 
        "service": "statuses/mentions_timeline", 
        "family": "statuses", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {
            "user": 15
        }, 
        "desc": "Returns the 20 most recent mentions (tweets containing a userss @screen_name) for the authenticating user.", 
        "params": {
            "count": [
                "OPTIONAL", 
                "Specifies the number of tweets to try and retrieve, up to a maximum of 200. The value of count is best thought of as a limit to the number of tweets to return because suspended or deleted content is removed after the count has been applied. We include retweets in the count, even if include_rts is not supplied. It is recommended you always send include_rts=1 when using this API method."
            ], 
            "since_id": [
                "OPTIONAL", 
                "Returns results with an ID greater than (that is, more recent than) the specified ID. There are limits to the number of Tweets which can be accessed through the API. If the limit of Tweets has occured since the since_id, the since_id will be forced to the oldest ID available.\n\nExample Values : 12345"
            ], 
            "max_id": [
                "OPTIONAL", 
                "Returns results with an ID less than (that is, older than) or equal to the specified ID.\n\nExample Values : 54321"
            ], 
            "trim_user": [
                "OPTIONAL", 
                "When set to either true , t or 1 , each tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.\n\nExample Values : true"
            ], 
            "contributor_details": [
                "OPTIONAL", 
                "This parameter enhances the contributors element of the status response to include the screen_name of the contributor. By default only the user_id of the contributor is included.\n\nExample Values : true"
            ], 
            "include_entities": [
                "OPTIONAL", 
                "The entities node will be disincluded when set to false .\n\nExample Values : false"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/statuses/mentions_timeline"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1/statuses/oembed.{format}", 
        "service": "statuses/oembed", 
        "family": "statuses", 
        "resp_format": [
            "JSON", 
            "XML"
        ], 
        "rate_limited": false, 
        "authentication_required": "NO", 
        "limits": {}, 
        "desc": "Returns a single Tweet, specified by either a Tweet web URL or the Tweet ID, in an oEmbed -compatible format. The returned HTML snippet will be automatically recognized as an embedded Tweet when Twitters widget JavaScript is included on the page .", 
        "params": {
            "id": [
                "REQUIRED", 
                "The ID of the desired Tweet.\n\nExample Values : 99530515043983360"
            ], 
            "url": [
                "REQUIRED", 
                "The URL of the Tweet to be embedded.\n\nExample Values :\n\nTo embed the Tweet at https://twitter.com/Interior/status/507185938620219395 , use: https%3A%2F%2Ftwitter.com%Interior%2Fstatus%2F507185938620219395"
            ], 
            "maxwidth": [
                "OPTIONAL", 
                "The maximum width of a rendered Tweet in whole pixels. This value must be between 220 and 550 inclusive. A supplied value under or over the allowed range will be returned as the minimum or maximum supported width respectively; the reset width value will be reflected in the returned width property.\n\nNote that Twitter does not support the oEmbed maxheight parameter. Tweets are fundamentally text, and are therefore of unpredictable height that cannot be scaled like an image or video. Relatedly, the oEmbed response will not provide a value for height . Implementations that need consistent heights for Tweets should refer to the hide_thread and hide_media parameters below.\n\nExample Values : 325"
            ], 
            "hide_media": [
                "OPTIONAL", 
                "When set to true , t or 1 links in a Tweet are not expanded to photo, video, or link previews.\n\nExample Values : true"
            ], 
            "hide_thread": [
                "OPTIONAL", 
                "When set to true , t or 1 a collapsed version of the previous Tweet in a conversation thread will not be displayed when the requested Tweet is in reply to another Tweet.\n\nExample Values : true"
            ], 
            "omit_script": [
                "OPTIONAL", 
                "When set to true , t or 1 the <script> responsible for loading widgets.js will not be returned. Your webpages should include their own reference to widgets.js for use across all Twitter widgets including Embedded Tweets .\n\nExample Values : true"
            ], 
            "align": [
                "OPTIONAL", 
                "Specifies whether the embedded Tweet should be floated left, right, or center in the page relative to the parent element. Valid values are left , right , center , and none . Defaults to none , meaning no alignment styles are specified for the Tweet.\n\nExample Values : center"
            ], 
            "related": [
                "OPTIONAL", 
                "A comma-separated list of Twitter usernames related to your content. This value will be forwarded to Tweet action intents if a viewer chooses to reply, favorite, or retweet the embedded Tweet.\n\nExample Values :\n\ntwitterapi,twitter"
            ], 
            "lang": [
                "OPTIONAL", 
                "Request returned HTML and a rendered Tweet in the specified Twitter language supported by embedded Tweets .\n\nExample Values : fr"
            ], 
            "widget_type": [
                "OPTIONAL", 
                "Set to video to return a Twitter Video embed for the given Tweet.\n\nExample Value : video"
            ], 
            "hide_tweet": [
                "OPTIONAL", 
                "Applies to video type only. Set to 1 or true to link directly to the Tweet URL instead of displaying a Tweet overlay when a viewer clicks on the Twitter bird logo.\n\nExample Value : 1"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/statuses/oembed"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/statuses/retweets_of_me.json", 
        "service": "statuses/retweets_of_me", 
        "family": "statuses", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {
            "user": 15
        }, 
        "desc": "Returns the most recent tweets authored by the authenticating user that have been retweeted by others. This timeline is a subset of the users GET statuses / user_timeline .", 
        "params": {
            "count": [
                "OPTIONAL", 
                "Specifies the number of records to retrieve. Must be less than or equal to 100. If omitted, 20 will be assumed.\n\nExample Values : 5"
            ], 
            "since_id": [
                "OPTIONAL", 
                "Returns results with an ID greater than (that is, more recent than) the specified ID. There are limits to the number of Tweets which can be accessed through the API. If the limit of Tweets has occured since the since_id, the since_id will be forced to the oldest ID available.\n\nExample Values : 12345"
            ], 
            "max_id": [
                "OPTIONAL", 
                "Returns results with an ID less than (that is, older than) or equal to the specified ID.\n\nExample Values : 54321"
            ], 
            "trim_user": [
                "OPTIONAL", 
                "When set to either true , t or 1 , each tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.\n\nExample Values : true"
            ], 
            "include_entities": [
                "OPTIONAL", 
                "The tweet entities node will not be included when set to false .\n\nExample Values : false"
            ], 
            "include_user_entities": [
                "OPTIONAL", 
                "The user entities node will not be included when set to false .\n\nExample Values : false"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/statuses/retweets_of_me"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/statuses/user_timeline.json", 
        "service": "statuses/user_timeline", 
        "family": "statuses", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 300, 
            "user": 180
        }, 
        "desc": "Returns a collection of the most recent Tweets posted by the user indicated by the screen_name or user_id parameters.", 
        "params": {
            "user_id": [
                "OPTIONAL", 
                "The ID of the user for whom to return results for.\n\nExample Values : 12345"
            ], 
            "screen_name": [
                "OPTIONAL", 
                "The screen name of the user for whom to return results for.\n\nExample Values : noradio"
            ], 
            "since_id": [
                "OPTIONAL", 
                "Returns results with an ID greater than (that is, more recent than) the specified ID. There are limits to the number of Tweets which can be accessed through the API. If the limit of Tweets has occured since the since_id, the since_id will be forced to the oldest ID available.\n\nExample Values : 12345"
            ], 
            "count": [
                "OPTIONAL", 
                "Specifies the number of tweets to try and retrieve, up to a maximum of 200 per distinct request. The value of count is best thought of as a limit to the number of tweets to return because suspended or deleted content is removed after the count has been applied. We include retweets in the count, even if include_rts is not supplied. It is recommended you always send include_rts=1 when using this API method."
            ], 
            "max_id": [
                "OPTIONAL", 
                "Returns results with an ID less than (that is, older than) or equal to the specified ID.\n\nExample Values : 54321"
            ], 
            "trim_user": [
                "OPTIONAL", 
                "When set to either true , t or 1 , each tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.\n\nExample Values : true"
            ], 
            "exclude_replies": [
                "OPTIONAL", 
                "This parameter will prevent replies from appearing in the returned timeline. Using exclude_replies with the count parameter will mean you will receive up-to count tweets \u2014 this is because the count parameter retrieves that many tweets before filtering out retweets and replies. This parameter is only supported for JSON and XML responses.\n\nExample Values : true"
            ], 
            "contributor_details": [
                "OPTIONAL", 
                "This parameter enhances the contributors element of the status response to include the screen_name of the contributor. By default only the user_id of the contributor is included.\n\nExample Values : true"
            ], 
            "include_rts": [
                "OPTIONAL", 
                "When set to false , the timeline will strip any native retweets (though they will still count toward both the maximal length of the timeline and the slice selected by the count parameter). Note: If you\u2019re using the trim_user parameter in conjunction with include_rts, the retweets will still contain a full user object.\n\nExample Values : false"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/statuses/user_timeline"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/statuses/retweeters/ids.json", 
        "service": "statuses/retweeters/ids", 
        "family": "statuses", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 60, 
            "user": 15
        }, 
        "desc": "Returns a collection of up to 100 user IDs belonging to users who have retweeted the tweet specified by the id parameter.", 
        "params": {
            "id": [
                "REQUIRED", 
                "The numerical ID of the desired status.\n\nExample Values : 327473909412814850"
            ], 
            "cursor": [
                "OPTIONAL", 
                "Causes the list of IDs to be broken into pages of no more than 100 IDs at a time. The number of IDs returned is not guaranteed to be 100 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of -1 will be assumed, which is the first \u201cpage.\u201d The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. See our cursor docs for more information. While this method supports the cursor parameter, the entire result set can be returned in a single cursored collection. Using the count parameter with this method will not provide segmented cursors for use with this parameter.\n\nExample Values : 12893764510938"
            ], 
            "stringify_ids": [
                "OPTIONAL", 
                "Many programming environments will not consume our ids due to their size. Provide this option to have ids returned as strings instead.\n\nExample Values : true"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/statuses/retweeters/ids"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/statuses/retweets/:id.json", 
        "service": "statuses/retweets/:id", 
        "family": "statuses", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 60, 
            "user": 15
        }, 
        "desc": "Returns a collection of the 100 most recent retweets of the tweet specified by the id parameter.", 
        "params": {
            "id": [
                "REQUIRED", 
                "The numerical ID of the desired status.\n\nExample Values : 123"
            ], 
            "count": [
                "OPTIONAL", 
                "Specifies the number of records to retrieve. Must be less than or equal to 100.\n\nExample Values : 5"
            ], 
            "trim_user": [
                "OPTIONAL", 
                "When set to either true , t or 1 , each tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.\n\nExample Values : true"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/statuses/retweets/:id"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/statuses/show.json", 
        "service": "statuses/show/:id", 
        "family": "statuses", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 180, 
            "user": 180
        }, 
        "desc": "Returns a single Tweet , specified by the id parameter. The Tweets author will also be embedded within the tweet.", 
        "params": {
            "id": [
                "REQUIRED", 
                "The numerical ID of the desired Tweet.\n\nExample Values : 123"
            ], 
            "trim_user": [
                "OPTIONAL", 
                "When set to either true , t or 1 , each tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.\n\nExample Values : true"
            ], 
            "include_my_retweet": [
                "OPTIONAL", 
                "When set to either true , t or 1 , any Tweets returned that have been retweeted by the authenticating user will include an additional current_user_retweet node, containing the ID of the source status for the retweet.\n\nExample Values : true"
            ], 
            "include_entities": [
                "OPTIONAL", 
                "The entities node will be disincluded when set to false .\n\nExample Values : false"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/statuses/show/:id"
    }, 
    {
        "method": "GET", 
        "url": "https://curator.twitter.com/broadcast/1/streams/compare", 
        "service": "streams/compare", 
        "family": "streams", 
        "resp_format": [
            "JSON", 
            "XML"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 180, 
            "user": 180
        }, 
        "desc": "This endpoint requires special permission to access and is only available for TV broadcast use cases. To request access please visit curator.twitter.com .", 
        "params": {
            "stream_ids": [
                "REQUIRED", 
                "A comma separated list of stream IDs."
            ], 
            "project_id": [
                "REQUIRED", 
                "Instead of specifying a list of stream IDs, you can instead specify a single project ID and all streams in that project will be included."
            ], 
            "auth": [
                "REQUIRED", 
                "Auth token for user."
            ], 
            "start_time": [
                "OPTIONAL", 
                "The starting unix timestamp in milliseconds. If time range is less than or equal to 2 hours will be rounded down to nearest minute, less than or equal to 5 days will be rounded down to nearest hour, otherwise will be rounded down to nearest day. Cannot be greater than 180 days in the past. Defaults to end_time - 1 hour if not specified."
            ], 
            "end_time": [
                "OPTIONAL", 
                "The ending unix timestamp in milliseconds. If time range is less than or equal to 2 hours will be rounded up to nearest minute, less than or equal to 5 days will be rounded up to nearest hour, otherwise will be rounded up to nearest day. Range cannot be greater than 30 days. Defaults to now if not specified."
            ], 
            "format": [
                "OPTIONAL", 
                "The output format request. This param can be either json or xml . It will default to json ."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/streams/compare"
    }, 
    {
        "method": "GET", 
        "url": "https://curator.twitter.com/broadcast/1/streams/compare_to_target", 
        "service": "streams/compare_to_target", 
        "family": "streams", 
        "resp_format": [
            "JSON", 
            "XML"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 180, 
            "user": 180
        }, 
        "desc": "This endpoint requires special permission to access and is only available for TV broadcast use cases. To request access please visit curator.twitter.com .", 
        "params": {
            "stream_ids": [
                "REQUIRED", 
                "A comma separated list of stream IDs."
            ], 
            "project_id": [
                "REQUIRED", 
                "Instead of specifying a list of stream IDs, you can instead specify a single project ID and all streams in that project will be included."
            ], 
            "mode": [
                "REQUIRED", 
                "Either TWEETS or AUTHORS. When tweets specified, will compare number of tweets to the target. When authors specified, will compare number of unique authors to the target."
            ], 
            "target": [
                "REQUIRED", 
                "The target value for tweets or unique authors."
            ], 
            "auth": [
                "REQUIRED", 
                "Auth token for user."
            ], 
            "start_time": [
                "OPTIONAL", 
                "The starting unix timestamp in milliseconds. If time range is less than or equal to 2 hours will be rounded down to nearest minute, less than or equal to 5 days will be rounded down to nearest hour, otherwise will be rounded down to nearest day. Cannot be greater than 180 days in the past. Defaults to end_time - 1 hour if not specified."
            ], 
            "end_time": [
                "OPTIONAL", 
                "The ending unix timestamp in milliseconds. If time range is less than 2 hours will be rounded up to nearest minute, less than 5 days will be rounded up to nearest hour, otherwise will be rounded up to nearest day. Range cannot be greater than 30 days. Defaults to now if not specified."
            ], 
            "format": [
                "OPTIONAL", 
                "The output format request. This param can be either json or xml . It will default to json ."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/streams/compare_to_target"
    }, 
    {
        "method": "GET", 
        "url": "https://curator.twitter.com/broadcast/1/streams/:id/content", 
        "service": "streams/:id/content", 
        "family": "streams", 
        "resp_format": [
            "JSON", 
            "XML"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 900, 
            "user": 900
        }, 
        "desc": "This endpoint requires special permission to access and is only available for TV broadcast use cases. To request access please visit curator.twitter.com .", 
        "params": {
            "id": [
                "REQUIRED", 
                "The id of the stream to get content for."
            ], 
            "auth": [
                "REQUIRED", 
                "Auth token for user."
            ], 
            "limit": [
                "OPTIONAL", 
                "The number of elements to return. Defaults to 50 if not specified."
            ], 
            "page": [
                "OPTIONAL", 
                "Used for pagination. Use the next_page or prev_page value obtained from a previous request. Use next_page to paginate through older results and prev_page to paginate through newer results."
            ], 
            "format": [
                "OPTIONAL", 
                "The output format request. This param can be either json or xml . It will default to json ."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/streams/id/content"
    }, 
    {
        "method": "GET", 
        "url": "https://curator.twitter.com/broadcast/1/streams/:id/metrics", 
        "service": "streams/:id/metrics", 
        "family": "streams", 
        "resp_format": [
            "JSON", 
            "XML"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 180, 
            "user": 180
        }, 
        "desc": "This endpoint requires special permission to access and is only available for TV broadcast use cases. To request access please visit curator.twitter.com .", 
        "params": {
            "id": [
                "REQUIRED", 
                "The id of the stream to get content for."
            ], 
            "auth": [
                "REQUIRED", 
                "Auth token for user."
            ], 
            "start_time": [
                "OPTIONAL", 
                "The starting unix timestamp in milliseconds. If time range is less than 2 hours will be rounded down to nearest minute, less than 5 days will be rounded down to nearest hour, otherwise will be rounded down to nearest day. Cannot be greater than 30 days in the past. Defaults to end_time - 1 hour if not specified."
            ], 
            "end_time": [
                "OPTIONAL", 
                "The ending unix timestamp in milliseconds. If time range is less than 2 hours will be rounded up to nearest minute, less than 5 days will be rounded up to nearest hour, otherwise will be rounded up to nearest day. Range cannot be greater than 30 days. Defaults to now if not specified."
            ], 
            "format": [
                "OPTIONAL", 
                "The output format request. This param can be either json or xml . It will default to json ."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/streams/id/metrics"
    }, 
    {
        "method": "GET", 
        "url": "https://curator.twitter.com/broadcast/1/streams/:id/trendline", 
        "service": "streams/:id/trendline", 
        "family": "streams", 
        "resp_format": [
            "JSON", 
            "XML"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 180, 
            "user": 180
        }, 
        "desc": "This endpoint requires special permission to access and is only available for TV broadcast use cases. To request access please visit curator.twitter.com .", 
        "params": {
            "id": [
                "REQUIRED", 
                "The id of the stream to get content for."
            ], 
            "auth": [
                "REQUIRED", 
                "Auth token for user."
            ], 
            "start_time": [
                "OPTIONAL", 
                "The starting unix timestamp in milliseconds. Will be rounded down to the nearest multiple of granularity . Cannot be greater than 30 days in the past. Defaults to end_time - 1 hour if not specified."
            ], 
            "end_time": [
                "OPTIONAL", 
                "The ending unix timestamp in milliseconds. Will be rounded up to the nearest multiple of granularity . Range cannot be greater than 2 hours for minute granularity, 5 days for hour granularity, or 30 days for day granularity. Defaults to now if not specified."
            ], 
            "granularity": [
                "OPTIONAL", 
                "One of MINUTE , HOUR , or DAY . This specifies the size of the time buckets. When not specified, defaults to MINUTE ."
            ], 
            "format": [
                "OPTIONAL", 
                "The output format request. This param can be either json or xml . It will default to json ."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/streams/id/trendline"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/trends/available.json", 
        "service": "trends/available", 
        "family": "trends", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 15, 
            "user": 15
        }, 
        "desc": "Returns the locations that Twitter has trending topic information for.", 
        "params": {}, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/trends/available"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/trends/closest.json", 
        "service": "trends/closest", 
        "family": "trends", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 15, 
            "user": 15
        }, 
        "desc": "Returns the locations that Twitter has trending topic information for, closest to a specified location.", 
        "params": {
            "lat": [
                "REQUIRED", 
                "If provided with a long parameter the available trend locations will be sorted by distance, nearest to furthest, to the co-ordinate pair. The valid ranges for longitude is -180.0 to +180.0 (West is negative, East is positive) inclusive.\n\nExample Values : 37.781157"
            ], 
            "long": [
                "REQUIRED", 
                "If provided with a lat parameter the available trend locations will be sorted by distance, nearest to furthest, to the co-ordinate pair. The valid ranges for longitude is -180.0 to +180.0 (West is negative, East is positive) inclusive.\n\nExample Values : -122.400612831116"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/trends/closest"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/trends/place.json", 
        "service": "trends/place", 
        "family": "trends", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 15, 
            "user": 15
        }, 
        "desc": "Returns the top 50 trending topics for a specific WOEID , if trending information is available for it.", 
        "params": {
            "id": [
                "REQUIRED", 
                "The Yahoo! Where On Earth ID of the location to return trending information for. Global information is available by using 1 as the WOEID .\n\nExample Values : 1"
            ], 
            "exclude": [
                "OPTIONAL", 
                "Setting this equal to hashtags will remove all hashtags from the trends list."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/trends/place"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/users/lookup.json", 
        "service": "users/lookup", 
        "family": "users", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 60, 
            "user": 180
        }, 
        "desc": "Returns fully-hydrated user objects for up to 100 users per request, as specified by comma-separated values passed to the user_id and/or screen_name parameters.", 
        "params": {
            "screen_name": [
                "OPTIONAL", 
                "A comma separated list of screen names, up to 100 are allowed in a single request. You are strongly encouraged to use a POST for larger (up to 100 screen names) requests.\n\nExample Values : twitterapi,twitter"
            ], 
            "user_id": [
                "OPTIONAL", 
                "A comma separated list of user IDs, up to 100 are allowed in a single request. You are strongly encouraged to use a POST for larger requests.\n\nExample Values : 783214,6253282"
            ], 
            "include_entities": [
                "OPTIONAL", 
                "The entities node that may appear within embedded statuses will be disincluded when set to false .\n\nExample Values : false"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/users/lookup"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/users/profile_banner.json", 
        "service": "users/profile_banner", 
        "family": "users", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {
            "user": 180
        }, 
        "desc": "Returns a map of the available size variations of the specified users profile banner. If the user has not uploaded a profile banner, a HTTP 404 will be served instead. This method can be used instead of string manipulation on the profile_banner_url returned in user objects as described in Profile Images and Banners .", 
        "params": {
            "user_id": [
                "OPTIONAL", 
                "The ID of the user for whom to return results. Helpful for disambiguating when a valid user ID is also a valid screen name.\n\nExample Values : 12345"
            ], 
            "screen_name": [
                "OPTIONAL", 
                "The screen name of the user for whom to return results. Helpful for disambiguating when a valid screen name is also a user ID.\n\nExample Values : noradio"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/users/profile_banner"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/users/search.json", 
        "service": "users/search", 
        "family": "users", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {
            "user": 180
        }, 
        "desc": "Provides a simple, relevance-based search interface to public user accounts on Twitter. Try querying by topical interest, full name, company name, location, or other criteria. Exact match searches are not supported.", 
        "params": {
            "q": [
                "REQUIRED", 
                "The search query to run against people search.\n\nExample Values : Twitter%20API"
            ], 
            "page": [
                "OPTIONAL", 
                "Specifies the page of results to retrieve.\n\nExample Values : 3"
            ], 
            "count": [
                "OPTIONAL", 
                "The number of potential user results to retrieve per page. This value has a maximum of 20.\n\nExample Values : 5"
            ], 
            "include_entities": [
                "OPTIONAL", 
                "The entities node will be disincluded from embedded tweet objects when set to false .\n\nExample Values : false"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/users/search"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/users/show.json", 
        "service": "users/show", 
        "family": "users", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 180, 
            "user": 180
        }, 
        "desc": "Returns a variety of information about the user specified by the required user_id or screen_name parameter. The authors most recent Tweet will be returned inline when possible.", 
        "params": {
            "user_id": [
                "REQUIRED", 
                "The ID of the user for whom to return results for. Either an id or screen_name is required for this method.\n\nExample Values : 12345"
            ], 
            "screen_name": [
                "REQUIRED", 
                "The screen name of the user for whom to return results for. Either a id or screen_name is required for this method.\n\nExample Values : noradio"
            ], 
            "include_entities": [
                "OPTIONAL", 
                "The entities node will be disincluded when set to false .\n\nExample Values : false"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/users/show"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/users/suggestions.json", 
        "service": "users/suggestions", 
        "family": "users", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 15, 
            "user": 15
        }, 
        "desc": "Access to Twitters suggested user list. This returns the list of suggested user categories. The category can be used in GET users / suggestions / :slug to get the users in that category.", 
        "params": {
            "lang": [
                "OPTIONAL", 
                "Restricts the suggested categories to the requested language. The language must be specified by the appropriate two letter ISO 639-1 representation. Currently supported languages are provided by the GET help / languages API request. Unsupported language codes will receive English (en) results. If you use lang in this request, ensure you also include it when requesting the GET users / suggestions / :slug list."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/users/suggestions"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/users/suggestions/:slug.json", 
        "service": "users/suggestions/:slug", 
        "family": "users", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 15, 
            "user": 15
        }, 
        "desc": "Access the users in a given category of the Twitter suggested user list.", 
        "params": {
            "slug": [
                "REQUIRED", 
                "The short name of list or a category\n\nExample Values : twitter"
            ], 
            "lang": [
                "OPTIONAL", 
                "Restricts the suggested categories to the requested language. The language must be specified by the appropriate two letter ISO 639-1 representation. Currently supported languages are provided by the GET help / languages API request. Unsupported language codes will receive English (en) results. If you use lang in this request, ensure you also include it when requesting the GET users / suggestions / :slug list."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/users/suggestions/:slug"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/users/suggestions/:slug.json", 
        "service": "users/suggestions/:slug", 
        "family": "users", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 15, 
            "user": 15
        }, 
        "desc": "Access the users in a given category of the Twitter suggested user list.", 
        "params": {
            "slug": [
                "REQUIRED", 
                "The short name of list or a category\n\nExample Values : twitter"
            ], 
            "lang": [
                "OPTIONAL", 
                "Restricts the suggested categories to the requested language. The language must be specified by the appropriate two letter ISO 639-1 representation. Currently supported languages are provided by the GET help / languages API request. Unsupported language codes will receive English (en) results. If you use lang in this request, ensure you also include it when requesting the GET users / suggestions / :slug list."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/users/suggestions/:slug"
    }, 
    {
        "method": "GET", 
        "url": "https://api.twitter.com/1.1/users/suggestions/:slug/members.json", 
        "service": "users/suggestions/:slug/members", 
        "family": "users", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {
            "app": 15, 
            "user": 15
        }, 
        "desc": "Access the users in a given category of the Twitter suggested user list and return their most recent status if they are not a protected user.", 
        "params": {
            "slug": [
                "REQUIRED", 
                "The short name of list or a category\n\nExample Values : twitter"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/get/users/suggestions/:slug/members"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/account/remove_profile_banner.json", 
        "service": "account/remove_profile_banner", 
        "family": "account", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Removes the uploaded profile banner for the authenticating user. Returns HTTP 200 upon success.", 
        "params": {}, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/account/remove_profile_banner"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/account/settings.json", 
        "service": "account/settings", 
        "family": "account", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Updates the authenticating users settings.", 
        "params": {
            "sleep_time_enabled": [
                "OPTIONAL", 
                "When set to true , t or 1 , will enable sleep time for the user. Sleep time is the time when push or SMS notifications should not be sent to the user.\n\nExample Values : true"
            ], 
            "start_sleep_time": [
                "OPTIONAL", 
                "The hour that sleep time should begin if it is enabled. The value for this parameter should be provided in ISO8601 format (i.e. 00-23). The time is considered to be in the same timezone as the user\u2019s time_zone setting.\n\nExample Values : 13"
            ], 
            "end_sleep_time": [
                "OPTIONAL", 
                "The hour that sleep time should end if it is enabled. The value for this parameter should be provided in ISO8601 format (i.e. 00-23). The time is considered to be in the same timezone as the user\u2019s time_zone setting.\n\nExample Values : 13"
            ], 
            "time_zone": [
                "OPTIONAL", 
                "The timezone dates and times should be displayed in for the user. The timezone must be one of the Rails TimeZone names.\n\nExample Values : Europe/Copenhagen , Pacific/Tongatapu"
            ], 
            "trend_location_woeid": [
                "OPTIONAL", 
                "The Yahoo! Where On Earth ID to use as the user\u2019s default trend location. Global information is available by using 1 as the WOEID. The woeid must be one of the locations returned by [node:59].\n\nExample Values : 1"
            ], 
            "allow_contributor_request": [
                "OPTIONAL", 
                "Whether to allow others to include user as contributor. Possible values include \u201call\u201d (anyone can include user), \u201cfollowing\u201d (only followers can include user) or \u201cnone\u201d.\n\nAlso note that changes to this field require the request also include a \u201ccurrent_password\u201d value with the user\u2019s password to successfully modify  this field.\n\nExample Values : 1"
            ], 
            "lang": [
                "OPTIONAL", 
                "The language which Twitter should render in for this user. The language must be specified by the appropriate two letter ISO 639-1 representation. Currently supported languages are provided by this endpoint .\n\nExample Values : it , en , es"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/account/settings"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/account/update_profile.json", 
        "service": "account/update_profile", 
        "family": "account", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Sets some values that users are able to set under the Account tab of their settings page. Only the parameters specified will be updated.", 
        "params": {
            "name": [
                "OPTIONAL", 
                "Full name associated with the profile. Maximum of 20 characters.\n\nExample Values : Marcel Molina"
            ], 
            "url": [
                "OPTIONAL", 
                "URL associated with the profile. Will be prepended with \u201chttp://\u201d if not present. Maximum of 100 characters.\n\nExample Values : http://project.ioni.st"
            ], 
            "location": [
                "OPTIONAL", 
                "The city or country describing where the user of the account is located. The contents are not normalized or geocoded in any way. Maximum of 30 characters.\n\nExample Values : San Francisco, CA"
            ], 
            "description": [
                "OPTIONAL", 
                "A description of the user owning the account. Maximum of 160 characters.\n\nExample Values : Flipped my wig at age 22 and it never grew back. Also: I work at Twitter."
            ], 
            "profile_link_color": [
                "OPTIONAL", 
                "Sets a hex value that controls the color scheme of links used on the authenticating user\u2019s profile page on twitter.com. This must be a valid hexadecimal value, and may be either three or six characters (ex: F00 or FF0000).\n\nExample Values : 0000FF\n\nThis parameter replaces the deprecated (and separate) update_profile_colors API method."
            ], 
            "include_entities": [
                "OPTIONAL", 
                "The entities node will not be included when set to false .\n\nExample Values : false"
            ], 
            "skip_status": [
                "OPTIONAL", 
                "When set to either true , t or 1 statuses will not be included in the returned user objects."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/account/update_profile"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/account/update_profile_background_image.json", 
        "service": "account/update_profile_background_image", 
        "family": "account", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {}, 
        "desc": "Updates the authenticating users profile background image. This method can also be used to enable or disable the profile background image.", 
        "params": {
            "image": [
                "OPTIONAL", 
                "The background image for the profile, base64-encoded. Must be a valid GIF, JPG, or PNG image of less than 800 kilobytes in size. Images with width larger than 2048 pixels will be forcibly scaled down. The image must be provided as raw multipart data, not a URL."
            ], 
            "tile": [
                "OPTIONAL", 
                "Whether or not to tile the background image. If set to true , t or 1 the background image will be displayed tiled. The image will not be tiled otherwise."
            ], 
            "include_entities": [
                "OPTIONAL", 
                "The entities node will not be included when set to false .\n\nExample Values : false"
            ], 
            "skip_status": [
                "OPTIONAL", 
                "When set to either true , t or 1 statuses will not be included in the returned user objects."
            ], 
            "media_id": [
                "OPTIONAL", 
                "Specify the media to use as the background image. More information on upload of media is available here ."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/account/update_profile_background_image"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/account/update_profile_banner.json", 
        "service": "account/update_profile_banner", 
        "family": "account", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Uploads a profile banner on behalf of the authenticating user. More information about sizing variations can be found in User Profile Images and Banners and GET users / profile_banner .", 
        "params": {
            "banner": [
                "REQUIRED", 
                "The Base64-encoded or raw image data being uploaded as the user\u2019s new profile banner."
            ], 
            "width": [
                "OPTIONAL", 
                "The width of the preferred section of the image being uploaded in pixels. Use with height , offset_left , and offset_top to select the desired region of the image to use."
            ], 
            "height": [
                "OPTIONAL", 
                "The height of the preferred section of the image being uploaded in pixels. Use with width , offset_left , and offset_top to select the desired region of the image to use."
            ], 
            "offset_left": [
                "OPTIONAL", 
                "The number of pixels by which to offset the uploaded image from the left. Use with height , width , and offset_top to select the desired region of the image to use."
            ], 
            "offset_top": [
                "OPTIONAL", 
                "The number of pixels by which to offset the uploaded image from the top. Use with height , width , and offset_left to select the desired region of the image to use."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/account/update_profile_banner"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/account/update_profile_image.json", 
        "service": "account/update_profile_image", 
        "family": "account", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Updates the authenticating users profile image. Note that this method expects raw multipart data, not a URL to an image.", 
        "params": {
            "image": [
                "REQUIRED", 
                "The avatar image for the profile, base64-encoded. Must be a valid GIF, JPG, or PNG image of less than 700 kilobytes in size. Images with width larger than 400 pixels will be scaled down. Animated GIFs will be converted to a static GIF of the first frame, removing the animation."
            ], 
            "include_entities": [
                "OPTIONAL", 
                "The entities node will not be included when set to false .\n\nExample Values : false"
            ], 
            "skip_status": [
                "OPTIONAL", 
                "When set to either true , t or 1 statuses will not be included in the returned user objects."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/account/update_profile_image"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/blocks/create.json", 
        "service": "blocks/create", 
        "family": "blocks", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Blocks the specified user from following the authenticating user. In addition the blocked user will not show in the authenticating users mentions or timeline (unless retweeted by another user). If a follow or friend relationship exists it is destroyed.", 
        "params": {
            "screen_name": [
                "OPTIONAL", 
                "The screen name of the potentially blocked user. Helpful for disambiguating when a valid screen name is also a user ID.\n\nExample Values : noradio"
            ], 
            "user_id": [
                "OPTIONAL", 
                "The ID of the potentially blocked user. Helpful for disambiguating when a valid user ID is also a valid screen name.\n\nExample Values : 12345"
            ], 
            "include_entities": [
                "OPTIONAL", 
                "The entities node will not be included when set to false .\n\nExample Values : false"
            ], 
            "skip_status": [
                "OPTIONAL", 
                "When set to either true , t or 1 statuses will not be included in the returned user objects.\n\nExample Values : true"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/blocks/create"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/blocks/destroy.json", 
        "service": "blocks/destroy", 
        "family": "blocks", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Un-blocks the user specified in the ID parameter for the authenticating user. Returns the un-blocked user in the requested format when successful.  If relationships existed before the block was instated, they will not be restored.", 
        "params": {
            "screen_name": [
                "OPTIONAL", 
                "The screen name of the potentially blocked user. Helpful for disambiguating when a valid screen name is also a user ID.\n\nExample Values : noradio"
            ], 
            "user_id": [
                "OPTIONAL", 
                "The ID of the potentially blocked user. Helpful for disambiguating when a valid user ID is also a valid screen name.\n\nExample Values : 12345"
            ], 
            "include_entities": [
                "OPTIONAL", 
                "The entities node will not be included when set to false .\n\nExample Values : false"
            ], 
            "skip_status": [
                "OPTIONAL", 
                "When set to either true , t or 1 statuses will not be included in the returned user objects."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/blocks/destroy"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/collections/create.json", 
        "service": "collections/create", 
        "family": "collections", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Create a Collection owned by the currently authenticated user.", 
        "params": {
            "name": [
                "REQUIRED", 
                "The title of the collection being created, in 25 characters or less.\n\nExample Value : Sweet%20Tweets"
            ], 
            "description": [
                "OPTIONAL", 
                "A brief description of this collection in 160 characters or fewer.\n\nExample Value : My%20favorite%20tweets%20ever"
            ], 
            "url": [
                "OPTIONAL", 
                "A fully-qualified URL to associate with this collection.\n\nExample Value : https%3A%2F%2Fexample.com%2F"
            ], 
            "timeline_order": [
                "OPTIONAL", 
                "Order Tweets chronologically or in the order they are added to a Collection.\n\ncuration_reverse_chron - order added (default)\n\ntweet_chron - oldest first\n\ntweet_reverse_chron - most recent first\n\nExample Value : tweet_reverse_chron"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/collections/create"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/collections/destroy.json", 
        "service": "collections/destroy", 
        "family": "collections", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Permanently delete a Collection owned by the currently authenticated user.", 
        "params": {
            "id": [
                "REQUIRED", 
                "The identifier of the Collection to destroy.\n\nExample Value : custom-388061495298244609"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/collections/destroy"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/collections/update.json", 
        "service": "collections/update", 
        "family": "collections", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Update information concerning a Collection owned by the currently authenticated user.", 
        "params": {
            "id": [
                "REQUIRED", 
                "The identifier of the Collection to modify.\n\nExample Value : custom-388061495298244609"
            ], 
            "name": [
                "OPTIONAL", 
                "The title of the Collection being created, in 25 characters or fewer.\n\nExample Value : Sweet%20Tweets"
            ], 
            "description": [
                "OPTIONAL", 
                "A brief description of this Collection in 160 characters or fewer.\n\nExample Value : My%20favorite%20tweets%20ever"
            ], 
            "url": [
                "OPTIONAL", 
                "A fully-qualified URL to associate with this Collection.\n\nExample Value : https%3A%2F%2Fexample.com%2F"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/collections/update"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/collections/entries/add.json", 
        "service": "collections/entries/add", 
        "family": "collections", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Add a specified Tweet to a Collection.", 
        "params": {
            "id": [
                "REQUIRED", 
                "The identifier of the Collection receiving the Tweet.\n\nExample Value : custom-388061495298244609"
            ], 
            "tweet_id": [
                "REQUIRED", 
                "The identifier of the Tweet to add to the Collection.\n\nExample Value : 390839888012382208"
            ], 
            "relative_to": [
                "OPTIONAL", 
                "The identifier of the Tweet used for relative positioning in a curation_reverse_chron ordered collection.\n\nExample Value : 614929127313965056"
            ], 
            "above": [
                "OPTIONAL", 
                "Set to false to insert the specified tweet_id below the relative_to Tweet in the collection. Default: true\n\nExample Value : false"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/collections/entries/add"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/collections/entries/curate.json", 
        "service": "collections/entries/curate", 
        "family": "collections", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Curate a Collection by adding or removing Tweets in bulk. Updates must be limited to 100 cumulative additions or removals per request.", 
        "params": {}, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/collections/entries/curate"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/collections/entries/move.json", 
        "service": "collections/entries/move", 
        "family": "collections", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Move a specified Tweet to a new position in a curation_reverse_chron ordered collection.", 
        "params": {
            "id": [
                "REQUIRED", 
                "The identifier of the Collection receiving the Tweet.\n\nExample Value : custom-388061495298244609"
            ], 
            "tweet_id": [
                "REQUIRED", 
                "The identifier of the Tweet to add to the Collection.\n\nExample Value : 390839888012382208"
            ], 
            "relative_to": [
                "REQUIRED", 
                "The identifier of the Tweet used for relative positioning.\n\nExample Value : 614929127313965056"
            ], 
            "above": [
                "OPTIONAL", 
                "Set to false to insert the specified tweet_id below the relative_to Tweet in the collection. Default: true\n\nExample Value : false"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/collections/entries/move"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/collections/entries/remove.json", 
        "service": "collections/entries/remove", 
        "family": "collections", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Remove the specified Tweet from a Collection.", 
        "params": {
            "id": [
                "REQUIRED", 
                "The identifier of the target Collection.\n\nExample Value : custom-388061495298244609"
            ], 
            "tweet_id": [
                "REQUIRED", 
                "The identifier of the Tweet to remove.\n\nExample Value : 390839888012382208"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/collections/entries/remove"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/direct_messages/destroy.json", 
        "service": "direct_messages/destroy", 
        "family": "direct_messages", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Destroys the direct message specified in the required ID parameter. The authenticating user must be the recipient of the specified direct message.", 
        "params": {
            "id": [
                "REQUIRED", 
                "The ID of the direct message to delete.\n\nExample Values : 1270516771"
            ], 
            "include_entities": [
                "OPTIONAL", 
                "The entities node will not be included when set to false .\n\nExample Values : false"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/direct_messages/destroy"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/direct_messages/new.json", 
        "service": "direct_messages/new", 
        "family": "direct_messages", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Sends a new direct message to the specified user from the authenticating user. Requires both the user and text parameters and must be a POST. Returns the sent message in the requested format if successful.", 
        "params": {
            "user_id": [
                "OPTIONAL", 
                "The ID of the user who should receive the direct message. Helpful for disambiguating when a valid user ID is also a valid screen name.\n\nExample Values : 12345"
            ], 
            "screen_name": [
                "OPTIONAL", 
                "The screen name of the user who should receive the direct message. Helpful for disambiguating when a valid screen name is also a user ID.\n\nExample Values : noradio"
            ], 
            "text": [
                "REQUIRED", 
                "The text of your direct message. Be sure to URL encode as necessary, and keep the message within the character count limit (available in the help/configuration endpoint)\n\nExample Values : Meet me behind the cafeteria after school"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/direct_messages/new"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/favorites/create.json", 
        "service": "favorites/create", 
        "family": "favorites", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Note: the like action was known as favorite before November 3, 2015; the historical naming remains in API methods and object properties.", 
        "params": {
            "id": [
                "REQUIRED", 
                "The numerical ID of the desired status.\n\nExample Values : 123"
            ], 
            "include_entities": [
                "OPTIONAL", 
                "The entities node will be omitted when set to false .\n\nExample Values : false"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/favorites/create"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/favorites/destroy.json", 
        "service": "favorites/destroy", 
        "family": "favorites", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Note: the like action was known as favorite before November 3, 2015; the historical naming remains in API methods and object properties.", 
        "params": {
            "id": [
                "REQUIRED", 
                "The numerical ID of the desired status.\n\nExample Values : 123"
            ], 
            "include_entities": [
                "OPTIONAL", 
                "The entities node will be omitted when set to false .\n\nExample Values : false"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/favorites/destroy"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/friendships/create.json", 
        "service": "friendships/create", 
        "family": "friendships", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Allows the authenticating users to follow the user specified in the ID parameter.", 
        "params": {
            "screen_name": [
                "OPTIONAL", 
                "The screen name of the user for whom to befriend.\n\nExample Values : noradio"
            ], 
            "user_id": [
                "OPTIONAL", 
                "The ID of the user for whom to befriend.\n\nExample Values : 12345"
            ], 
            "follow": [
                "OPTIONAL", 
                "Enable notifications for the target user.\n\nExample Values : true"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/friendships/create"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/friendships/destroy.json", 
        "service": "friendships/destroy", 
        "family": "friendships", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Allows the authenticating user to unfollow the user specified in the ID parameter.", 
        "params": {
            "screen_name": [
                "OPTIONAL", 
                "The screen name of the user for whom to unfollow.\n\nExample Values : noradio"
            ], 
            "user_id": [
                "OPTIONAL", 
                "The ID of the user for whom to unfollow.\n\nExample Values : 12345"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/friendships/destroy"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/friendships/update.json", 
        "service": "friendships/update", 
        "family": "friendships", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Allows one to enable or disable retweets and device notifications from the specified user.", 
        "params": {
            "screen_name": [
                "OPTIONAL", 
                "The screen name of the user for whom to befriend.\n\nExample Values : noradio"
            ], 
            "user_id": [
                "OPTIONAL", 
                "The ID of the user for whom to befriend.\n\nExample Values : 12345"
            ], 
            "device": [
                "OPTIONAL", 
                "Enable/disable device notifications from the target user.\n\nExample Values : true , false"
            ], 
            "retweets": [
                "OPTIONAL", 
                "Enable/disable retweets from the target user.\n\nExample Values : true , false"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/friendships/update"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/geo/place.json", 
        "service": "geo/place", 
        "family": "geo", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "As of December 2nd, 2013, this endpoint is deprecated and retired and no longer functions. Place creation was used infrequently by third party applications and is generally no longer supported on Twitter. Requests will return with status 410 (Gone) with error code 251 .", 
        "params": {
            "name": [
                "REQUIRED", 
                "The name a place is known as.\n\nExample Values : Twitter%20HQ"
            ], 
            "contained_within": [
                "REQUIRED", 
                "The place_id within which the new place can be found. Try and be as close as possible with the containing place. For example, for a room in a building, set the contained_within as the building place_id .\n\nExample Values : 247f43d441defc03"
            ], 
            "token": [
                "REQUIRED", 
                "The token found in the response from geo/similar_places.\n\nExample Values : 36179c9bf78835898ebf521c1defd4be"
            ], 
            "lat": [
                "REQUIRED", 
                "The latitude the place is located at. This parameter will be ignored unless it is inside the range -90.0 to +90.0 (North is positive) inclusive. It will also be ignored if there isn\u2019t a corresponding long parameter.\n\nExample Values : 37.7821120598956"
            ], 
            "long": [
                "REQUIRED", 
                "The longitude the place is located at. The valid ranges for longitude is -180.0 to +180.0 (East is positive) inclusive. This parameter will be ignored if outside that range, if it is not a number, if geo_enabled is disabled, or if there not a corresponding lat parameter.\n\nExample Values : -122.400612831116"
            ], 
            "attribute:street_address": [
                "OPTIONAL", 
                "This parameter searches for places which have this given street address. There are other well-known, and application specific attributes available. Custom attributes are also permitted. Learn more here .\n\nExample Values : 795%20Folsom%20St"
            ], 
            "callback": [
                "OPTIONAL", 
                "If supplied, the response will use the JSONP format with a callback of the given name."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/geo/place"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/lists/create.json", 
        "service": "lists/create", 
        "family": "lists", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {}, 
        "desc": "Creates a new list for the authenticated user. Note that you can create up to 1000 lists per account.", 
        "params": {
            "name": [
                "REQUIRED", 
                "The name for the list.\n\nA list\u2019s name must start with a letter and can consist only of 25 or fewer letters, numbers, \u201c-\u201c, or \u201c_\u201d characters."
            ], 
            "mode": [
                "OPTIONAL", 
                "Whether your list is public or private. Values can be public or private . If no mode is specified the list will be public."
            ], 
            "description": [
                "OPTIONAL", 
                "The description to give the list."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/lists/create"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/lists/destroy.json", 
        "service": "lists/destroy", 
        "family": "lists", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {}, 
        "desc": "Deletes the specified list. The authenticated user must own the list to be able to destroy it.", 
        "params": {
            "owner_screen_name": [
                "OPTIONAL", 
                "The screen name of the user who owns the list being requested by a slug ."
            ], 
            "owner_id": [
                "OPTIONAL", 
                "The user ID of the user who owns the list being requested by a slug ."
            ], 
            "list_id": [
                "REQUIRED", 
                "The numerical id of the list."
            ], 
            "slug": [
                "REQUIRED", 
                "You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you\u2019ll also have to specify the list owner using the owner_id or owner_screen_name parameters."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/lists/destroy"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/lists/update.json", 
        "service": "lists/update", 
        "family": "lists", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {}, 
        "desc": "Updates the specified list. The authenticated user must own the list to be able to update it.", 
        "params": {
            "list_id": [
                "REQUIRED", 
                "The numerical id of the list."
            ], 
            "slug": [
                "REQUIRED", 
                "You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you\u2019ll also have to specify the list owner using the owner_id or owner_screen_name parameters."
            ], 
            "name": [
                "OPTIONAL", 
                "The name for the list."
            ], 
            "mode": [
                "OPTIONAL", 
                "Whether your list is public or private. Values can be public or private . If no mode is specified the list will be public."
            ], 
            "description": [
                "OPTIONAL", 
                "The description to give the list."
            ], 
            "owner_screen_name": [
                "OPTIONAL", 
                "The screen name of the user who owns the list being requested by a slug ."
            ], 
            "owner_id": [
                "OPTIONAL", 
                "The user ID of the user who owns the list being requested by a slug ."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/lists/update"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/lists/members/create.json", 
        "service": "lists/members/create", 
        "family": "lists", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {}, 
        "desc": "Add a member to a list. The authenticated user must own the list to be able to add members to it. Note that lists cannot have more than 5,000 members.", 
        "params": {
            "list_id": [
                "REQUIRED", 
                "The numerical id of the list."
            ], 
            "slug": [
                "REQUIRED", 
                "You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you\u2019ll also have to specify the list owner using the owner_id or owner_screen_name parameters."
            ], 
            "user_id": [
                "REQUIRED", 
                "The ID of the user for whom to return results for. Helpful for disambiguating when a valid user ID is also a valid screen name."
            ], 
            "screen_name": [
                "REQUIRED", 
                "The screen name of the user for whom to return results for. Helpful for disambiguating when a valid screen name is also a user ID."
            ], 
            "owner_screen_name": [
                "OPTIONAL", 
                "The screen name of the user who owns the list being requested by a slug ."
            ], 
            "owner_id": [
                "OPTIONAL", 
                "The user ID of the user who owns the list being requested by a slug ."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/lists/members/create"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/lists/members/create_all.json", 
        "service": "lists/members/create_all", 
        "family": "lists", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {}, 
        "desc": "Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it. Note that lists cant have more than 5,000 members, and you are limited to adding up to 100 members to a list at a time with this method.", 
        "params": {
            "list_id": [
                "REQUIRED", 
                "The numerical id of the list."
            ], 
            "slug": [
                "REQUIRED", 
                "You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you\u2019ll also have to specify the list owner using the owner_id or owner_screen_name parameters."
            ], 
            "user_id": [
                "OPTIONAL", 
                "A comma separated list of user IDs, up to 100 are allowed in a single request."
            ], 
            "screen_name": [
                "OPTIONAL", 
                "A comma separated list of screen names, up to 100 are allowed in a single request."
            ], 
            "owner_screen_name": [
                "OPTIONAL", 
                "The screen name of the user who owns the list being requested by a slug ."
            ], 
            "owner_id": [
                "OPTIONAL", 
                "The user ID of the user who owns the list being requested by a slug ."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/lists/members/create_all"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/lists/members/destroy.json", 
        "service": "lists/members/destroy", 
        "family": "lists", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {}, 
        "desc": "Removes the specified member from the list. The authenticated user must be the lists owner to remove members from the list.", 
        "params": {
            "list_id": [
                "OPTIONAL", 
                "The numerical id of the list."
            ], 
            "slug": [
                "OPTIONAL", 
                "You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you\u2019ll also have to specify the list owner using the owner_id or owner_screen_name parameters."
            ], 
            "user_id": [
                "OPTIONAL", 
                "The ID of the user to remove from the list. Helpful for disambiguating when a valid user ID is also a valid screen name."
            ], 
            "screen_name": [
                "OPTIONAL", 
                "The screen name of the user for whom to remove from the list. Helpful for disambiguating when a valid screen name is also a user ID."
            ], 
            "owner_screen_name": [
                "OPTIONAL", 
                "The screen name of the user who owns the list being requested by a slug ."
            ], 
            "owner_id": [
                "OPTIONAL", 
                "The user ID of the user who owns the list being requested by a slug ."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/lists/members/destroy"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/lists/members/destroy_all.json", 
        "service": "lists/members/destroy_all", 
        "family": "lists", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {}, 
        "desc": "Removes multiple members from a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to remove members from it. Note that lists cant have more than 500 members, and you are limited to removing up to 100 members to a list at a time with this method.", 
        "params": {
            "list_id": [
                "REQUIRED", 
                "The numerical id of the list."
            ], 
            "slug": [
                "REQUIRED", 
                "You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you\u2019ll also have to specify the list owner using the owner_id or owner_screen_name parameters."
            ], 
            "user_id": [
                "OPTIONAL", 
                "A comma separated list of user IDs, up to 100 are allowed in a single request."
            ], 
            "screen_name": [
                "OPTIONAL", 
                "A comma separated list of screen names, up to 100 are allowed in a single request."
            ], 
            "owner_screen_name": [
                "OPTIONAL", 
                "The screen name of the user who owns the list being requested by a slug ."
            ], 
            "owner_id": [
                "OPTIONAL", 
                "The user ID of the user who owns the list being requested by a slug ."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/lists/members/destroy_all"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/lists/subscribers/create.json", 
        "service": "lists/subscribers/create", 
        "family": "lists", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {}, 
        "desc": "Subscribes the authenticated user to the specified list.", 
        "params": {
            "owner_screen_name": [
                "OPTIONAL", 
                "The screen name of the user who owns the list being requested by a slug ."
            ], 
            "owner_id": [
                "OPTIONAL", 
                "The user ID of the user who owns the list being requested by a slug ."
            ], 
            "list_id": [
                "REQUIRED", 
                "The numerical id of the list."
            ], 
            "slug": [
                "REQUIRED", 
                "You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you\u2019ll also have to specify the list owner using the owner_id or owner_screen_name parameters."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/lists/subscribers/create"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/lists/subscribers/destroy.json", 
        "service": "lists/subscribers/destroy", 
        "family": "lists", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "YES", 
        "limits": {}, 
        "desc": "Unsubscribes the authenticated user from the specified list.", 
        "params": {
            "list_id": [
                "REQUIRED", 
                "The numerical id of the list."
            ], 
            "slug": [
                "REQUIRED", 
                "You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you\u2019ll also have to specify the list owner using the owner_id or owner_screen_name parameters."
            ], 
            "owner_screen_name": [
                "OPTIONAL", 
                "The screen name of the user who owns the list being requested by a slug ."
            ], 
            "owner_id": [
                "OPTIONAL", 
                "The user ID of the user who owns the list being requested by a slug ."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/lists/subscribers/destroy"
    }, 
    {
        "method": "POST", 
        "url": "https://upload.twitter.com/1.1/media/upload.json", 
        "service": "media/upload(INIT)", 
        "family": "media", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "The INIT command request is used to initiate a file upload session. It returns a media_id which should be used to execute all subsequent requests. The next step after a successful return from INIT command is APPEND command .", 
        "params": {
            "command": [
                "REQUIRED", 
                "Must be set to INIT (case sensitive)"
            ], 
            "total_bytes": [
                "REQUIRED", 
                "The size of the media being uploaded in bytes."
            ], 
            "media_type": [
                "REQUIRED", 
                "The MIME type of the media being uploaded.\n\nExamples: video/mp4 , video/mp4 ."
            ], 
            "media_category": [
                "REQUIRED", 
                "A string enum value which identifies a media usecase. This identifier is used to enforce usecase specific constraints (e.g. filesize, video duration) and enable advance features."
            ], 
            "additional_owners": [
                "OPTIONAL", 
                "A comma-separated string of user IDs to set as additional owners who are allowed to use the returned media_id in Tweets or Cards. A maximum of 100 additional owners may be specified."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/media/upload-chunked"
    }, 
    {
        "method": "POST", 
        "url": "https://upload.twitter.com/1.1/media/upload.json", 
        "service": "media/upload(INIT)", 
        "family": "media", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "The INIT command request is used to initiate a file upload session. It returns a media_id which should be used to execute all subsequent requests. The next step after a successful return from INIT command is APPEND command .", 
        "params": {
            "command": [
                "REQUIRED", 
                "Must be set to INIT (case sensitive)"
            ], 
            "total_bytes": [
                "REQUIRED", 
                "The size of the media being uploaded in bytes."
            ], 
            "media_type": [
                "REQUIRED", 
                "The MIME type of the media being uploaded.\n\nExamples: video/mp4 , video/mp4 ."
            ], 
            "media_category": [
                "REQUIRED", 
                "A string enum value which identifies a media usecase. This identifier is used to enforce usecase specific constraints (e.g. filesize, video duration) and enable advance features."
            ], 
            "additional_owners": [
                "OPTIONAL", 
                "A comma-separated string of user IDs to set as additional owners who are allowed to use the returned media_id in Tweets or Cards. A maximum of 100 additional owners may be specified."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/media/upload-init"
    }, 
    {
        "method": "POST", 
        "url": "https://upload.twitter.com/1.1/media/upload.json", 
        "service": "media/upload", 
        "family": "media", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Use this endpoint to upload images to Twitter. It returns a media_id which can be used in most Twitter endpoints that accept images. For example, you can use returned media_id to create a Tweet with photo using STATUS update endpoint.", 
        "params": {
            "media": [
                "REQUIRED", 
                "The raw binary file content being uploaded. Cannot be used with media_data ."
            ], 
            "media_data": [
                "REQUIRED", 
                "The base64-encoded file content being uploaded. Cannot be used with media ."
            ], 
            "additional_owners": [
                "OPTIONAL", 
                "A comma-separated string of user IDs to set as additional owners who are allowed to use the returned media_id in Tweets or Cards. A maximum of 100 additional owners may be specified."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/media/upload"
    }, 
    {
        "method": "POST", 
        "url": "https://upload.twitter.com/1.1/media/metadata/create.json", 
        "service": "media/metadata/create", 
        "family": "media", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "This endpoint should be used to provide additional information about the uploaded media_id. This feature is only supported for Tweet images and GIFs currently. The request flow should be:", 
        "params": {}, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/media/metadata/create"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/mutes/users/create.json", 
        "service": "mutes/users/create", 
        "family": "mutes", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Mutes the user specified in the ID parameter for the authenticating user.", 
        "params": {
            "screen_name": [
                "OPTIONAL", 
                "The screen name of the potentially muted user. Helpful for disambiguating when a valid screen name is also a user ID.\n\nExample Values : whiteleaf"
            ], 
            "user_id": [
                "OPTIONAL", 
                "The ID of the potentially muted user. Helpful for disambiguating when a valid user ID is also a valid screen name.\n\nExample Values : 12345"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/mutes/users/create"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/mutes/users/destroy.json", 
        "service": "mutes/users/destroy", 
        "family": "mutes", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Un-mutes the user specified in the ID parameter for the authenticating user.", 
        "params": {
            "screen_name": [
                "OPTIONAL", 
                "The screen name of the potentially muted user. Helpful for disambiguating when a valid screen name is also a user ID.\n\nExample Values : whiteleaf"
            ], 
            "user_id": [
                "OPTIONAL", 
                "The ID of the potentially muted user. Helpful for disambiguating when a valid user ID is also a valid screen name.\n\nExample Values : 12345"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/mutes/users/destroy"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/saved_searches/create.json", 
        "service": "saved_searches/create", 
        "family": "saved_searches", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Create a new saved search for the authenticated user. A user may only have 25 saved searches.", 
        "params": {
            "query": [
                "REQUIRED", 
                "The query of the search the user would like to save. The query must be 100 characters or less."
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/saved_searches/create"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/saved_searches/destroy/:id.json", 
        "service": "saved_searches/destroy/:id", 
        "family": "saved_searches", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Destroys a saved search for the authenticating user. The authenticating user must be the owner of saved search id being destroyed.", 
        "params": {
            "id": [
                "REQUIRED", 
                "The ID of the saved search.\n\nExample Values : 313006"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/saved_searches/destroy/:id"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/statuses/update.json", 
        "service": "statuses/update", 
        "family": "statuses", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Updates the authenticating users current status, also known as Tweeting.", 
        "params": {
            "status": [
                "REQUIRED", 
                "The text of your status update, typically up to 140 characters. URL encode as necessary. t.co link wrapping may affect character counts.\n\nThere are some special commands in this field to be aware of. For instance, preceding a message with \u201cD \u201d or \u201cM \u201d and following it with a screen name can create a direct message to that user if the relationship allows for it."
            ], 
            "in_reply_to_status_id": [
                "OPTIONAL", 
                "The ID of an existing status that the update is in reply to.\n\nNote: : This parameter will be ignored unless the author of the tweet this parameter references is mentioned within the status text. Therefore, you must include @username , where username is the author of the referenced tweet, within the update."
            ], 
            "possibly_sensitive": [
                "OPTIONAL", 
                "If you upload Tweet media that might be considered sensitive content such as nudity, violence, or medical procedures, you should set this value to true. See Media setting and best practices for more context. Defaults to false .\n\nExample Values : true"
            ], 
            "lat": [
                "OPTIONAL", 
                "The latitude of the location this tweet refers to. This parameter will be ignored unless it is inside the range -90.0 to +90.0 (North is positive) inclusive. It will also be ignored if there isn\u2019t a corresponding long parameter.\n\nExample Values : 37.7821120598956"
            ], 
            "long": [
                "OPTIONAL", 
                "The longitude of the location this tweet refers to. The valid ranges for longitude is -180.0 to +180.0 (East is positive) inclusive. This parameter will be ignored if outside that range, if it is not a number, if geo_enabled is disabled, or if there not a corresponding lat parameter.\n\nExample Values : -122.400612831116"
            ], 
            "place_id": [
                "OPTIONAL", 
                "A place in the world.\n\nExample Values : df51dec6f4ee2b2c"
            ], 
            "display_coordinates": [
                "OPTIONAL", 
                "Whether or not to put a pin on the exact coordinates a tweet has been sent from.\n\nExample Values : true"
            ], 
            "trim_user": [
                "OPTIONAL", 
                "When set to either true , t or 1 , each Tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.\n\nExample Values : true"
            ], 
            "media_ids": [
                "OPTIONAL", 
                "A list of media_ids to associate with the Tweet. You may include up to 4 photos or 1 animated GIF or 1 video in a Tweet. See Uploading Media for further details on uploading media.\n\nExample Values : 471592142565957632"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/statuses/update"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/statuses/update_with_media.json", 
        "service": "statuses/update_with_media(deprecated)", 
        "family": "statuses", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "This endpoint has been DEPRECATED. Please use POST statuses/update for uploading one or more media entities.", 
        "params": {
            "status": [
                "REQUIRED", 
                "The text of your status update. URL encode as necessary. t.co link wrapping may affect character counts if the post contains URLs. You must additionally account for the characters_reserved_per_media per uploaded media, additionally accounting for space characters in between finalized URLs.\n\nNote : Request the GET help / configuration endpoint to get the current characters_reserved_per_media and max_media_per_upload values."
            ], 
            "media[]": [
                "REQUIRED", 
                "Up to max_media_per_upload files may be specified in the request, each named media[] . Supported image formats are PNG, JPG and GIF, including animated GIFs of up to 3MB . This data must be either the raw image bytes or encoded as base64.\n\nNote : Request the GET help / configuration endpoint to get the current max_media_per_upload and photo_size_limit values."
            ], 
            "possibly_sensitive": [
                "OPTIONAL", 
                "Set to true for content which may not be suitable for every audience."
            ], 
            "in_reply_to_status_id": [
                "OPTIONAL", 
                "The ID of an existing status that the update is in reply to.\n\nNote : This parameter will be ignored unless the author of the tweet this parameter references is mentioned within the status text. Therefore, you must include @username , where username is the author of the referenced tweet, within the update."
            ], 
            "lat": [
                "OPTIONAL", 
                "The latitude of the location this tweet refers to. This parameter will be ignored unless it is inside the range -90.0 to +90.0 (North is positive) inclusive. It will also be ignored if there isn\u2019t a corresponding long parameter.\n\nExample Values : 37.7821120598956"
            ], 
            "long": [
                "OPTIONAL", 
                "The longitude of the location this tweet refers to. The valid ranges for longitude is -180.0 to +180.0 (East is positive) inclusive. This parameter will be ignored if outside that range, not a number, geo_enabled is disabled, or if there not a corresponding lat parameter.\n\nExample Values : -122.400612831116"
            ], 
            "place_id": [
                "OPTIONAL", 
                "A place in the world identified by a Twitter place ID. Place IDs can be retrieved from geo/reverse_geocode.\n\nExample Values : df51dec6f4ee2b2c"
            ], 
            "display_coordinates": [
                "OPTIONAL", 
                "Whether or not to put a pin on the exact coordinates a tweet has been sent from.\n\nExample Values : true"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/statuses/update_with_media"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/statuses/destroy/:id.json", 
        "service": "statuses/destroy/:id", 
        "family": "statuses", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Destroys the status specified by the required ID parameter. The authenticating user must be the author of the specified status. Returns the destroyed status if successful.", 
        "params": {
            "id": [
                "REQUIRED", 
                "The numerical ID of the desired status.\n\nExample Values : 123"
            ], 
            "trim_user": [
                "OPTIONAL", 
                "When set to either true , t or 1 , each tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.\n\nExample Values : true"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/statuses/destroy/:id"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/statuses/retweet/:id.json", 
        "service": "statuses/retweet/:id", 
        "family": "statuses", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Retweets a tweet. Returns the original tweet with retweet details embedded.", 
        "params": {
            "id": [
                "REQUIRED", 
                "The numerical ID of the desired status.\n\nExample Values : 123"
            ], 
            "trim_user": [
                "OPTIONAL", 
                "When set to either true , t or 1 , each tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.\n\nExample Values : true"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/statuses/retweet/:id"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/statuses/unretweet/:id.json", 
        "service": "statuses/unretweet/:id", 
        "family": "statuses", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Untweets a retweeted status. Returns the original Tweet with retweet details embedded.", 
        "params": {
            "id": [
                "REQUIRED", 
                "The numerical ID of the desired retweet status.\n\nExample Values : 123"
            ], 
            "trim_user": [
                "OPTIONAL", 
                "When set to either true , t or 1 , each tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.\n\nExample Values : true"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/statuses/unretweet/:id"
    }, 
    {
        "method": "POST", 
        "url": "https://api.twitter.com/1.1/users/report_spam.json", 
        "service": "users/report_spam", 
        "family": "users", 
        "resp_format": [
            "JSON"
        ], 
        "rate_limited": true, 
        "authentication_required": "USER_ONLY", 
        "limits": {}, 
        "desc": "Report the specified user as a spam account to Twitter. Additionally performs the equivalent of POST blocks / create on behalf of the authenticated user.", 
        "params": {
            "screen_name": [
                "OPTIONAL", 
                "The ID or screen_name of the user you want to report as a spammer. Helpful for disambiguating when a valid screen name is also a user ID.\n\nExample Values : noradio"
            ], 
            "user_id": [
                "OPTIONAL", 
                "The ID of the user you want to report as a spammer. Helpful for disambiguating when a valid user ID is also a valid screen name.\n\nExample Values : 12345"
            ]
        }, 
        "reference_url": "https://dev.twitter.com/rest/reference/post/users/report_spam"
    } 
]
